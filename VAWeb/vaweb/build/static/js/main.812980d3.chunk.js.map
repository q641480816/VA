{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/common/utils.js","js/component/baseDialog/baseDialog.js","js/map/countrySelectDialog/charts/countryLineChart.js","js/map/countrySelectDialog/charts/countryRadarChart.js","js/map/countrySelectDialog/countrySelectDialog.js","js/map/legendSelectDialog/legendSelectDialog.js","js/map/mapElement/mapElement.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","separator","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","mapProjection","world","projection","x","y","scale","asia","countries","OceaniaASEAN","europe","africa","northAmerica","southAmerica","colors","dark","main","medium","light","country","highlight","resizeFactor","resizeDimension","dimension","countryCodeISO","BaseDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","isOpen","handleClose","state","clicked","styles","bind","assertThisInitialized","onRef","nextProps","Dialog_default","open","maxWidth","maxheight","onClose","DialogTitle_default","id","DialogContent_default","children","Component","dialog","maxHeight","container","CountryLineChart","prepareLineChart","data","labels","keys","selectedCountry","sort","datasets","selectDataset","label","countryName","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","d","forEach","year","push","selectedType","prepareLineChartData","worldDataset","prepareWorldData","prepareOption","maintainAspectRatio","tooltips","mode","callbacks","tooltipItem","datasetIndex","yLabel","substring","afterBody","tooltipItems","worldDataSet","xLabel","indexOf","scales","yAxes","ticks","callback","value","index","scaleLabel","labelString","xAxes","es","options","flexDirection","CountryRaderChart","prepareRadarChart","values","p","length","selectedData","beginAtZero","max","parseInt","selectedYear","groupedDataSet","CountrySelectDialog","openDialog","alert","source","b","onTabChange","event","_this2","baseDialog","instance","AppBar_default","Tabs_default","onChange","indicatorColor","textColor","fullWidth","Tab_default","countryLineChart","countryRadarChart","_container","up","fontSize","LegendSelectDialog","chart","name","legend","renderChart","react_vis_es","animation","stroke","strokeOpacity","strokeWidth","hideRootNode","colorType","onValueMouseOver","node","handleMouseOver","onValueMouseOut","handleMouseOut","updateData","keyPath","child","fillOpacity","getKeyPath","parent","getSectionDescription","path","section","i","continent","sum","count","c","size","j","reverse","pathAsMap","reduce","res","row","Tooltip_default","placement","tooltip","marginTop","background","boxShadow","shadows","text","primary","typography","pxToRem","MapElement","getPupUp","geography","content","numberOfThings","properties","openLegendDialog","legendSelectDialog","prepareLegendSelectData","prepareCountrySelectData","iso","fullData","worldAverage","selectType","countryCode","paletteScale","scaleLinear","domain","range","rawData","mapP","valueSet","drawMap","Datamaps","scope","element","document","getElementById","responsive","dataType","fills","defaultFill","done","datamap","svg","selectAll","on","countrySelectDialog","dataset","geographyConfig","borderDefault","borderWidth","defaultStrokeWidth","highlightBorderColor","highlightBorderWidth","highlightStrokeWidth","highlightFillColor","o","highlightOnHover","popupTemplate","selectedArea","mapClass","attr","renderLegend","legendSet","legendContainer","legendWrapper","legendBlockSize","legendBlock","onMouseOver","onLegendBlockMouseOver","onMouseOut","onLegendBlockMouseOut","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","removeChild","React","createRef","window","addEventListener","updateChoropleth","prevProps","prevState","snapshot","ref","_legendContainer","_legendBlock","borderTop","borderBottom","Map","renderSelect","valueSource","dataSource","displayName","FormControl_default","disabled","isAutoPlay","marginRight","Select_default","displayEmpty","disableUnderline","MenuItem_default","textAlign","menuItem","renderSlider","Slider_default","yearSelected","min","yearSet","step","thumb","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","processData","resource","onlyValues","Math","apply","Number","MAX_SAFE_INTEGER","fillColor","l","dataSet","onSelectTypeChange","target","onSelectedAreaChange","togglePlay","isPlay","play","setTimeout","bottomPaddingTop","mapBoxHeight","console","log","removeEventListener","Card_default","configBar","Toolbar_default","mapContainer","mapElement","bottomWrapper","_menuItem","_descriptionContent","_bottom","_bottomWrapper","borderRadius","fonWeight","paddingTop","paddingBottom","Data","Default","titleWrapper","mainTitle","subTitle","_mainTitle","_subTitle","fontFamily","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","history","renderMap","js_map_map","navigateButton","Route","exact","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.812980d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    //fetchUrl: \"http://localhost:8080/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate ',\r\n            separator: [\"%\"]\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent ',\r\n            separator: [\"%\"]\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent ',\r\n            separator: [\"%\"]\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption ',\r\n            separator: []\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking ',\r\n            separator: [\"‱\",\"‰\"]\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death ',\r\n            separator: [\"%\"]\r\n        }\r\n    },\r\n    mapProjection: {\r\n        world: {\r\n            key: 'world',\r\n            display: 'World',\r\n            //projection: 'translate(0,0)scale(1)'\r\n            projection: {\r\n                x: 0,\r\n                y: 0,\r\n                scale: 1\r\n            }\r\n        },\r\n        asia: {\r\n            key: 'asia',\r\n            display: 'Asia',\r\n            //projection: 'translate(-700,-70)scale(1.85)',\r\n            projection: {\r\n                x: -700,\r\n                y: -70,\r\n                scale: 1.85\r\n            },\r\n            countries: ['AFG','AZE','BHR','BGD','ARM','BTN','IOT','LKA','CHN','TWN','CXR','CCK','CYP','GEO','PSE','HKG','IND','IRN','IRQ','ISR','JPN','KAZ','JOR','PRK','KOR','KWT','KGZ','LBN','MAC','MDV','MNG','OMN','NPL','PAK','TLS','QAT','RUS','SAU','SYR','TJK','ARE','TUR','TKM','UZB','YEM']\r\n        },\r\n        OceaniaASEAN: {\r\n            key: 'OceaniaASEAN',\r\n            display: 'Oceania & ASEAN',\r\n            //projection: 'translate(-1250,-350)scale(1.95)',\r\n            projection: {\r\n                x: -1250,\r\n                y: -350,\r\n                scale: 1.95\r\n            },\r\n            countries: ['THA','VNM','LAO' ,'SGP','PHL','MMR','KHM','MYS','IDN','BRN','ASM','AUS','SLB','COK','FJI','PYF','KIR','GUM','NRU','NCL','VUT','NZL','NIU','NFK','MNP','UMI','FSM','MHL','PLW','PNG','PCN','TKL','TON','TUV','WLF','WSM']\r\n        },\r\n        europe: {\r\n            key: 'europe',\r\n            display: 'Europe',\r\n            //projection: 'translate(-850,0)scale(2.4)',\r\n            projection: {\r\n                x: -850,\r\n                y: 0,\r\n                scale: 2.4\r\n            },\r\n            countries: ['ALB','AND','AZE','AUT','ARM','BEL','BIH','BGR','BLR','HRV','CYP','CZE','DNK','EST','FRO','FIN','ALA','FRA','GEO','DEU','GIB','GRC','VAT','HUN','ISL','IRL','ITA','KAZ','LVA','LIE','LTU','LUX','MLT','MCO','MDA','MNE','NLD','NOR','POL','PRT','ROU','RUS','SMR','SRB','SVK','SVN','ESP','SJM','SWE','CHE','TUR','UKR','MKD','GBR','GGY','JEY','IMN']\r\n        },\r\n        africa: {\r\n            key: 'africa',\r\n            display: 'Africa',\r\n            //projection: 'translate(-650,-280)scale(2)',\r\n            projection: {\r\n                x: -650,\r\n                y: -280,\r\n                scale: 2\r\n            },\r\n            countries: ['DZA','AGO','BWA','BDI','CMR','CPV','CAF','TCD','COM','MYT','COG','COD','BEN','GNQ','ETH','ERI','DJI','GAB','GMB','GHA','GIN','CIV','KEN','LSO','LBR','LBY','MDG','MWI','MLI','MRT','MUS','MAR','MOZ','NAM','NER','NGA','GNB','REU','RWA','SHN','STP','SEN','SYC','SLE','SOM','ZAF','ZWE','SSD','SDN','ESH','SWZ','TGO','TUN','UGA','EGY','TZA','BFA','ZMB']\r\n        },\r\n        northAmerica: {\r\n            key: 'northAmerica',\r\n            display: 'North America',\r\n            //projection: 'translate(150,-60)scale(1.85)',\r\n            projection: {\r\n                x: 150,\r\n                y: -60,\r\n                scale: 1.85\r\n            },\r\n            countries: ['ATG','BHS','BRB','BMU','BLZ','VGB','CAN','CYM','CRI','CUB','DMA','DOM','SLV','GRL','GRD','GLP','GTM','HTI','HND','JAM','MTQ','MEX','MSR','ANT','CUW','ABW','SXM','BES','NIC','UMI','PAN','PRI','BLM','KNA','AIA','LCA','MAF','SPM','VCT','TTO','TCA','USA','VIR']\r\n        },\r\n        southAmerica: {\r\n            key: 'southAmerica',\r\n            display: 'South America',\r\n            //projection: 'translate(-100,-420)scale(1.98)',\r\n            projection: {\r\n                x: -100,\r\n                y: -420,\r\n                scale: 1.98\r\n            },\r\n            countries: ['ARG','BOL','BRA','CHL','COL','ECU','FLK','GUF','GUY','PRY','PER','SUR','URY','VEN']\r\n        }\r\n    },\r\n    colors: {\r\n        world: {\r\n            dark: '#072F66',\r\n            main: \"#0B3D82\",\r\n            medium: '#3266AD',\r\n            light: '#5481BE',\r\n        },\r\n        country: {\r\n            dark: '#8F480D',\r\n            main: \"#B56726\",\r\n            medium: '#F5AE73',\r\n            light: '#FFCDA3',\r\n        },\r\n        highlight: {\r\n            dark: '#FCE20A',\r\n            main: \"#FFEA39\",\r\n            medium: '#FFF181',\r\n            light: '#FFF6AF',\r\n        }\r\n    },\r\n    resizeFactor: {\r\n        width: 1041.04,\r\n        height: 473.2\r\n    },\r\n    resizeDimension: (projection, dimension) => {\r\n        let dims = {\r\n            y: dimension.height / utilData.resizeFactor.height * projection.y,\r\n            x: dimension.width / utilData.resizeFactor.width * projection.x,\r\n            scale: projection.scale\r\n        };\r\n        return dims;\r\n    },\r\n    countryCodeISO: ['AFG','ALA','ALB','DZA','ASM','AND','AGO','AIA','ATA','ATG','ARG','ARM','ABW','AUS','AUT','AZE','BHS','BHR','BGD','BRB','BLR','BEL','BLZ','BEN','BMU','BTN','BOL','BQ','BIH','BWA','BVT','BRA','IOT','BRN','BGR','BFA','BDI','CPV','KHM','CMR','CAN','CYM','CAF','TCD','CHL','CHN','CXR','CCK','COL','COM','COG','COD','COK','CRI','CIV','HRV','CUB','CUW','CYP','CZE','DNK','DJI','DMA','DOM','ECU','EGY','SLV','GNQ','ERI','EST','SWZ','ETH','FLK','FRO','FJI','FIN','FRA','GUF','PYF','ATF','GAB','GMB','GEO','DEU','GHA','GIB','GRC','GRL','GRD','GLP','GUM','GTM','GGY','GIN','GNB','GUY','HTI','HMD','VAT','HND','HKG','HUN','ISL','IND','IDN','IRN','IRQ','IRL','IMN','ISR','ITA','JAM','JPN','JEY','JOR','KAZ','KEN','KIR','PRK','KOR','KWT','KGZ','LAO','LVA','LBN','LSO','LBR','LBY','LIE','LTU','LUX','MAC','MKD','MDG','MWI','MYS','MDV','MLI','MLT','MHL','MTQ','MRT','MUS','MYT','MEX','FSM','MDA','MCO','MNG','MNE','MSR','MAR','MOZ','MMR','NAM','NRU','NPL','NLD','NCL','NZL','NIC','NER','NGA','NIU','NFK','MNP','NOR','OMN','PAK','PLW','PS','PAN','PNG','PRY','PER','PHL','PCN','POL','PRT','PRI','QAT','REU','ROU','RUS','RWA','BLM','SH','KNA','LCA','MAF','SPM','VCT','WSM','SMR','STP','SAU','SEN','SRB','SYC','SLE','SGP','SXM','SVK','SVN','SLB','SOM','ZAF','SGS','SSD','ESP','LKA','SDN','SUR','SJM','SWE','CHE','SYR','TW','TJK','TZ','THA','TLS','TGO','TKL','TON','TTO','TUN','TUR','TKM','TCA','TUV','UGA','UKR','ARE','GBR','USA','UMI','URY','UZB','VUT','VEN','VNM','VGB','VIR','WLF','ESH','YEM','ZMB','ZWE']\r\n};\r\n\r\nexport default utilData;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass BaseDialog extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            isOpen: false,\r\n            clicked: false\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            title: this.props.title\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            title: nextProps.title\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            isOpen: true\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    render () {\r\n        return(\r\n            <Dialog open={this.state.isOpen} maxWidth = {'lg'} maxheight={'lg'} onClose={this.handleClose}>\r\n                <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\r\n                <DialogContent>\r\n                    {this.props.children}\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    dialog: {\r\n        maxHeight: 1000,\r\n        maxWidth: 1000\r\n    },\r\n    container: {}\r\n});\r\n\r\n\r\nBaseDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BaseDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport utilData from \"../../../common/utils\";\r\n\r\nclass CountryLineChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            selectedType: null,\r\n            worldDataSet: {}\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareLineChart = this.prepareLineChart.bind(this);\r\n        this.prepareOption = this.prepareOption.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            data: this.props.data,\r\n            selectedType: this.props.selectedType,\r\n            worldDataSet: this.props.worldDataSet\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            data: nextProps.data,\r\n            selectedType: nextProps.selectedType,\r\n            worldDataSet: nextProps.worldDataSet\r\n        });\r\n    }\r\n\r\n    prepareLineChart = () => {\r\n        let prepareLineChartData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.selectedCountry[year][this.state.selectedType]));\r\n            return d;\r\n        };\r\n        let prepareWorldData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.world[year]));\r\n            return d;\r\n        };\r\n        let data = {};\r\n        data.labels = Object.keys(this.state.data.selectedCountry).sort();\r\n        data.datasets = [];\r\n        let selectDataset = {\r\n            label: this.state.data.selectedCountry[data.labels[0]].countryName,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.country.main,\r\n            borderColor: utilData.colors.country.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.country.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.country.main,\r\n            pointHoverBorderColor: utilData.colors.country.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareLineChartData()\r\n        };\r\n        let worldDataset = {\r\n            label: \"World\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.world.main,\r\n            borderColor: utilData.colors.world.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.world.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.world.main,\r\n            pointHoverBorderColor: utilData.colors.world.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareWorldData()\r\n        };\r\n\r\n        data.datasets.push(selectDataset, worldDataset);\r\n        return data;\r\n    };\r\n\r\n    prepareOption = () => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                mode: 'label',\r\n                position: 'nearest',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n                        return (\" \" + label + ':  ' + (tooltipItem.yLabel + \"\").substring(0, 5) + this.state.data.separator);\r\n                    },\r\n                    afterBody: (tooltipItems, data) => {\r\n                        return '\\n' + data.datasets[0].label + \"is ranked NO.\" + (this.state.worldDataSet[tooltipItems[0].xLabel].indexOf(tooltipItems[0].yLabel) + 1) + \" in the World\";\r\n                    }\r\n                },\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        padding: 10,\r\n                        callback: (value, index) => {\r\n                            return value + this.state.data.separator;\r\n                        }\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: this.state.data.yLabel\r\n                    },\r\n                }],\r\n                xAxes: [{\r\n                    ticks: {\r\n                        padding: 10\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Year'\r\n                    },\r\n                }]\r\n            },\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Line width={600} height={350} options={this.prepareOption()} data={this.prepareLineChart()}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nCountryLineChart.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    selectedType: PropTypes.string.isRequired,\r\n    worldDataSet: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CountryLineChart);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport {Line, Radar} from 'react-chartjs-2';\r\n\r\nimport utilData from \"../../../common/utils\";\r\n\r\nclass CountryRaderChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            selectedType: null,\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n        this.keys = [];\r\n\r\n        this.prepareRadarChart = this.prepareRadarChart.bind(this);\r\n        this.prepareOption = this.prepareOption.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            data: this.props.data,\r\n            selectedType: this.props.selectedType,\r\n            selectedYear: this.props.selectedYear,\r\n            selectedData: this.props.data.groupedDataSet[Object.values(this.props.data.selectedCountry)[0].countryName + this.props.selectedYear]\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            data: nextProps.data,\r\n            selectedType: nextProps.selectedType,\r\n            selectedYear: nextProps.selectedYear,\r\n            selectedData: nextProps.data.groupedDataSet[Object.values(nextProps.data.selectedCountry)[0].countryName + nextProps.selectedYear]\r\n        });\r\n    }\r\n\r\n    prepareRadarChart = () => {\r\n        let labels = [];\r\n        let data = [];\r\n        let keys = [];\r\n        Object.values(utilData.typePair).forEach((p) => {\r\n            if (p.separator.length > 0) {\r\n                let value = this.state.selectedData[p.key] <= 100 ? this.state.selectedData[p.key] : this.state.selectedData[p.key] / 100;\r\n                let separator = this.state.selectedData[p.key] <= 100 ? utilData.typePair[p.key].separator[0] : utilData.typePair[p.key].separator[1];\r\n                labels.push(p.display + \" in \" + separator);\r\n                data.push(value);\r\n                keys.push(p.key);\r\n            }\r\n        });\r\n\r\n        this.keys = keys;\r\n\r\n        return {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Overview of ' + this.state.selectedData.countryName + \" in year of \" + this.state.selectedData.year,\r\n                    backgroundColor: utilData.colors.world.main,\r\n                    borderColor: utilData.colors.world.medium,\r\n                    pointBorderColor: utilData.colors.world.light,\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: utilData.colors.world.main,\r\n                    pointHoverBorderColor: utilData.colors.world.medium,\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: data\r\n                }\r\n            ]\r\n        };\r\n    };\r\n\r\n    prepareOption = () => {\r\n        let scale = 0;\r\n        Object.values(utilData.typePair).forEach((p) => {\r\n            if (p.separator.length > 0) {\r\n                let data = this.state.selectedData[p.key] <= 100 ? this.state.selectedData[p.key] : this.state.selectedData[p.key]/10\r\n                if (data > scale) scale = data;\r\n            }\r\n        });\r\n\r\n        return {\r\n            maintainAspectRatio: true,\r\n            scale: {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    max: (scale + 20) < 100 ? (parseInt(scale / 10, 10) + 2) * 10 : 100\r\n                }\r\n            },\r\n            tooltips: {\r\n                mode: 'label',\r\n                position: 'nearest',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let key = this.keys[tooltipItem.index];\r\n                        let value = this.state.selectedData[key] <= 100 ? this.state.selectedData[key] : this.state.selectedData[key] / 10;\r\n                        value = (value + \"\").substring(0, 5);\r\n                        let separator = this.state.selectedData[key] <= 100 ? utilData.typePair[key].separator[0] : utilData.typePair[key].separator[1];\r\n                        return \" \" + utilData.typePair[key].display + \": \" + (this.state.selectedData[key] === 0 ? \"No data available for this country in this year\" : value + separator);\r\n                    }\r\n                },\r\n            },\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Radar data={this.prepareRadarChart()} width={600} height={350} options={this.prepareOption()}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nCountryRaderChart.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    selectedType: PropTypes.string.isRequired,\r\n    selectedYear: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CountryRaderChart);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport BaseDialog from \"../../component/baseDialog/baseDialog\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport utilData from \"../../common/utils\";\r\nimport CountryLineChart from \"./charts/countryLineChart\";\r\nimport CountryRaderChart from \"./charts/countryRadarChart\";\r\n\r\nclass CountrySelectDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: 0,\r\n            data: null,\r\n            selectedType: null,\r\n            worldDataSet: {},\r\n            title: \"\",\r\n            selectedYear: \"1980\",\r\n            groupedDataSet: {}\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.openDialog = this.openDialog.bind(this);\r\n        this.onTabChange = this.onTabChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    openDialog = (data, selectedType, selectedYear) => {\r\n        if (Object.values(data.selectedCountry).length === 0){\r\n            alert(\"N/A\");\r\n        }else {\r\n            //prepare world dataset\r\n            let worldDataSet = {};\r\n            Object.keys(data.source.data).forEach((year) => {\r\n                worldDataSet[year] = data.source.data[year].map((d) => {\r\n                    return d[selectedType]\r\n                }).sort((a, b) => b - a);\r\n            });\r\n\r\n            this.setState({\r\n                data: Object.values(data.selectedCountry).length !== 0 ? data : null,\r\n                selectedType: selectedType,\r\n                worldDataSet: worldDataSet,\r\n                title: utilData.typePair[selectedType].display + \" in \" + Object.values(data.selectedCountry)[0].countryName,\r\n                selectedYear: selectedYear,\r\n                value: 0\r\n            });\r\n            this.dialog.handleClickOpen();\r\n        }\r\n    };\r\n\r\n    onTabChange = (event, index) => {\r\n        this.setState({\r\n            value: index,\r\n            title: index === 0 ? utilData.typePair[this.state.selectedType].display + \" in \" + Object.values(this.state.data.selectedCountry)[0].countryName : \"Overview in \" + Object.values(this.state.data.selectedCountry)[0].countryName + \" in year of \" + this.state.selectedYear\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.data != null) {\r\n            return (\r\n                <BaseDialog onRef={instance => {\r\n                    this.dialog = instance;\r\n                }} title={this.state.title}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs\r\n                            value={this.state.value}\r\n                            onChange={(event, value) => this.onTabChange(event, value)}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            fullWidth\r\n                        >\r\n                            <Tab\r\n                                label={this.state.selectedType ? utilData.typePair[this.state.selectedType].display : \"Null\"}/>\r\n                            <Tab label=\"Country Overview\"/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <div className={this.styles.container}>\r\n                        {this.state.value === 0 &&\r\n                        <CountryLineChart data={this.state.data} selectedType={this.state.selectedType}\r\n                                          worldDataSet={this.state.worldDataSet}/>}\r\n                        {this.state.value === 1 &&\r\n                        <CountryRaderChart data={this.state.data} selectedType={this.state.selectedType} selectedYear={this.state.selectedYear}/>}\r\n                    </div>\r\n                </BaseDialog>\r\n            )\r\n        } else {\r\n            return (\r\n                <div/>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '6px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            padding: '9px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '12px',\r\n        }\r\n    }\r\n});\r\n\r\n\r\nCountrySelectDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CountrySelectDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport BaseDialog from \"../../component/baseDialog/baseDialog\";\r\nimport {Sunburst} from 'react-vis';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport utilData from \"../../common/utils\";\r\n\r\nclass LegendSelectDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedType: null,\r\n            data: null,\r\n            chart: null,\r\n            label: \"Please hover to a section to see detail\",\r\n            selectedYear: \"1990\",\r\n            separator: \"%\",\r\n            title: \"\"\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.openDialog = this.openDialog.bind(this);\r\n        this.renderChart = this.renderChart.bind(this);\r\n        this.handleMouseOver = this.handleMouseOver.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.updateData = this.updateData.bind(this);\r\n        this.getKeyPath = this.getKeyPath.bind(this);\r\n        this.getSectionDescription = this.getSectionDescription.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    openDialog = (data) => {\r\n        if (data.chart) {\r\n            this.setState({\r\n                selectedType: utilData.typePair[data.name],\r\n                data: data,\r\n                chart: data.chart,\r\n                selectedYear: data.selectedYear,\r\n                separator: data.separator,\r\n                title: utilData.typePair[data.name].display + \" for countries within the range of \" + data.legend.display\r\n            });\r\n            this.dialog.handleClickOpen();\r\n        }else {\r\n            alert(\"N/A\");\r\n        }\r\n    };\r\n\r\n    renderChart = () => {\r\n        if (this.state.data !== null) {\r\n            return (\r\n                <Sunburst\r\n                    data={this.state.chart}\r\n                    animation\r\n                    height={400}\r\n                    width={600}\r\n                    style={{\r\n                        stroke: '#ddd',\r\n                        strokeOpacity: 0.3,\r\n                        strokeWidth: '0.5'\r\n                    }}\r\n                    hideRootNode\r\n                    colorType=\"literal\"\r\n                    onValueMouseOver={node => this.handleMouseOver(node)}\r\n                    onValueMouseOut={node => this.handleMouseOut(node)}\r\n                />\r\n            )\r\n        } else {\r\n            return <div/>\r\n        }\r\n    };\r\n\r\n    updateData = (chart, keyPath) => {\r\n        if (chart.children) {\r\n            chart.children.map(child => this.updateData(child, keyPath));\r\n        }\r\n        chart.style = {\r\n            fillOpacity: (keyPath && !keyPath[chart.name]) ? 0.2 : 1\r\n        };\r\n        return chart;\r\n    };\r\n\r\n    getKeyPath = (node) => {\r\n        if (!node.parent) {\r\n            return ['root'];\r\n        }\r\n\r\n        return [(node.data && node.data.name) || node.name].concat(\r\n            this.getKeyPath(node.parent)\r\n        );\r\n    };\r\n\r\n    getSectionDescription = (path) => {\r\n        let section = path[path.length - 1];\r\n        let value = null;\r\n        for (let i = 0; i < this.state.chart.children.length; i++) {\r\n            let continent = this.state.chart.children[i];\r\n            if (continent.name === path[1]) {\r\n                if (path.length === 2) {\r\n                    let sum = 0;\r\n                    let count = 0;\r\n                    continent.children.forEach((c) => {\r\n                        count++;\r\n                        sum += c.size;\r\n                    });\r\n                    value = (sum / count + \"\").substring(0, 5) + this.state.separator;\r\n                } else {\r\n                    for (let j = 0; j < continent.children.length; j++) {\r\n                        let c = continent.children[j];\r\n                        if (c.name === section) {\r\n                            value = (c.size + \"\").substring(0, 5) + this.state.separator;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (value) break;\r\n            }\r\n        }\r\n        return this.state.selectedType.display + \" in \" + section + \" is \" + value + \" in \" + this.state.selectedYear + (path.length === 2 ? \" in average\" : \"\");\r\n    };\r\n\r\n    handleMouseOver = (node) => {\r\n        const path = this.getKeyPath(node).reverse();\r\n        this.getSectionDescription(path);\r\n        const pathAsMap = path.reduce((res, row) => {\r\n            res[row] = true;\r\n            return res;\r\n        }, {});\r\n        this.setState({\r\n            label: this.getSectionDescription(path),\r\n            chart: this.updateData(this.state.chart, pathAsMap),\r\n        });\r\n    };\r\n\r\n    handleMouseOut = (node) => {\r\n        this.setState({\r\n            label: \"Please hover to a section to see detail\",\r\n            chart: this.updateData(this.state.data.chart, false)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <BaseDialog title={this.state.title} onRef={instance => {\r\n                this.dialog = instance;\r\n            }}>\r\n                <Tooltip title={this.state.label} placement={\"top\"} classes={{tooltip: this.styles.tooltip}}>\r\n                    <div className={this.styles.container}>\r\n                        {this.renderChart()}\r\n                    </div>\r\n                </Tooltip>\r\n            </BaseDialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        marginTop: 40\r\n    },\r\n    tooltip: {\r\n        background: theme.palette.common.white,\r\n        boxShadow: theme.shadows[1],\r\n        color: theme.palette.text.primary,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: theme.typography.pxToRem(10),\r\n        },\r\n    }\r\n});\r\n\r\n\r\nLegendSelectDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LegendSelectDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport utilData from \"../../common/utils\";\r\nimport CountrySelectDialog from \"../countrySelectDialog/countrySelectDialog\";\r\nimport LegendSelectDialog from \"../legendSelectDialog/legendSelectDialog\";\r\nimport {scaleLinear} from \"d3-scale\";\r\n\r\nimport * as d3 from 'd3';\r\n\r\nclass MapElement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null,\r\n            legendBlockSize: 7,\r\n            borderDefault: '#DEDEDE',\r\n            highlightBorderColor: utilData.colors.highlight.dark,\r\n            highlightStrokeWidth: 1,\r\n            defaultStrokeWidth: 0.45,\r\n            selectedArea: utilData.mapProjection[0],\r\n            selectedType: \"prevalenceInPercent\",\r\n            selectedYear: \"1990\"\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n        this.styles = this.props.classes;\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n        this.renderLegend = this.renderLegend.bind(this);\r\n        this.onLegendBlockMouseOver = this.onLegendBlockMouseOver.bind(this);\r\n        this.onLegendBlockMouseOut = this.onLegendBlockMouseOut.bind(this);\r\n        this.prepareCountrySelectData = this.prepareCountrySelectData.bind(this);\r\n        this.prepareLegendSelectData = this.prepareLegendSelectData.bind(this);\r\n        this.openLegendDialog = this.openLegendDialog.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener(\"resize\", () => {\r\n        });\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n            selectedArea: this.props.selectedArea,\r\n            selectedType: this.props.selectedType,\r\n            selectedYear: this.props.selectedYear\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let map = this.state.map;\r\n\r\n        if (nextProps.data !== this.state.data) {\r\n            map.updateChoropleth(nextProps.data.dataset);\r\n        }\r\n\r\n        if (nextProps.selectedArea !== this.state.selectedArea) {\r\n            let dimension = utilData.resizeDimension({\r\n                x: nextProps.selectedArea.projection.x,\r\n                y: nextProps.selectedArea.projection.y,\r\n                scale: nextProps.selectedArea.projection.scale\r\n            }, {\r\n                height: nextProps.mapClass.height.substring(0, nextProps.mapClass.height.length - 2),\r\n                width: nextProps.mapClass.width.substring(0, nextProps.mapClass.width.length - 2)\r\n            });\r\n\r\n            map.svg.selectAll(\"g\").attr(\"transform\", \"translate(\" + dimension.x + \",\" + dimension.y + \")scale(\" + dimension.scale + \")\");\r\n            //map.svg.selectAll(\"g\").attr(\"center\", \"(-900,0)\");\r\n        }\r\n\r\n        this.setState({\r\n            data: nextProps.data,\r\n            map: map,\r\n            mapClass: nextProps.mapClass,\r\n            selectedArea: nextProps.selectedArea,\r\n            selectedType: nextProps.selectedType,\r\n            selectedYear: nextProps.selectedYear\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data.numberOfThings === -1 ? 'No Data Available' : data.numberOfThings;\r\n        return (\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n            '<span>' + geography.properties.name + '</span>' +\r\n            '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n        )\r\n    };\r\n\r\n    openLegendDialog = (legend) => {\r\n        this.legendSelectDialog.openDialog(this.prepareLegendSelectData(legend));\r\n    };\r\n\r\n    prepareCountrySelectData = (iso) => {\r\n        let source = this.state.data.fullData;\r\n        let data = {\r\n            selectedCountry: {},\r\n            world: source.worldAverage,\r\n            source: source,\r\n            groupedDataSet: this.state.data.groupedDataSet,\r\n            separator: this.state.data.separator,\r\n            selectType: this.state.selectedType\r\n        };\r\n        let label = utilData.typePair[this.state.selectedType].description;\r\n        data.yLabel = (this.state.data.separator.length === 0 ? label : label + \" in \" + this.state.data.separator);\r\n\r\n        Object.keys(source.data).forEach((year) => {\r\n            for (let i = 0; i < source.data[year].length; i++) {\r\n                if (source.data[year][i].countryCode === iso) {\r\n                    data.selectedCountry[year] = source.data[year][i];\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    };\r\n\r\n    prepareLegendSelectData = (legend) => {\r\n        let paletteScale = scaleLinear().domain([legend.value[0], legend.value[1] > 100 ? legend.value[0] + 20 : legend.value[1]]).range([\"#EFEFFF\", utilData.colors.world.dark]);\r\n        let data = {\r\n            name: this.state.selectedType,\r\n            rawData: this.state.data,\r\n            legend: legend,\r\n            selectedYear: this.state.selectedYear,\r\n            separator: this.state.data.separator,\r\n        };\r\n        let chart = {name: legend.display, color: utilData.colors.world.dark, children: []};\r\n        Object.keys(utilData.mapProjection).forEach((key) => {\r\n            let mapP = utilData.mapProjection[key];\r\n            if (mapP.key !== \"world\") {\r\n                let continent = {name: mapP.display, color: utilData.colors.world.medium, children: []};\r\n                legend.valueSet.forEach((iso) => {\r\n                    let country = this.state.data.rawData[iso];\r\n                    if (mapP.countries.indexOf(iso) >= 0) {\r\n                        continent.children.push({\r\n                            name: country.countryName,\r\n                            color: paletteScale(country[this.state.selectedType]),\r\n                            size: country[this.state.selectedType],\r\n                        });\r\n                    }\r\n                });\r\n                if (continent.children.length > 0) {\r\n                    let sum = 0;\r\n                    continent.children.forEach((c) => {\r\n                        sum += c.size\r\n                    });\r\n                    let paletteScale = scaleLinear().domain([legend.value[0], legend.value[1] > 100 ? legend.value[0] + 20 : legend.value[1]]).range([\"#EFEFFF\", utilData.colors.country.dark]);\r\n                    continent.color = paletteScale(sum / continent.children.length);\r\n                    chart.children.push(continent);\r\n                }\r\n            }\r\n        });\r\n        if (chart.children.length > 0) data.chart = chart;\r\n        return data;\r\n    };\r\n\r\n    drawMap = () => {\r\n        //USA\r\n        let map = new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"mapContainer\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            done: (datamap) => {\r\n                datamap.svg.selectAll('.datamaps-subunit').on('click', (geography) => {\r\n                    this.countrySelectDialog.openDialog(this.prepareCountrySelectData(geography.properties.iso), this.state.selectedType, this.state.selectedYear);\r\n                });\r\n            },\r\n            data: this.state.data.dataset,\r\n            geographyConfig: {\r\n                borderColor: this.state.borderDefault,\r\n                borderWidth: this.state.defaultStrokeWidth,\r\n                highlightBorderColor: this.state.highlightBorderColor,\r\n                highlightBorderWidth: this.state.highlightStrokeWidth,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n\r\n        let dimension = utilData.resizeDimension({\r\n            x: this.state.selectedArea.projection.x,\r\n            y: this.state.selectedArea.projection.y,\r\n            scale: this.state.selectedArea.projection.scale\r\n        }, {\r\n            height: this.state.mapClass.height.substring(0, this.state.mapClass.height.length - 2),\r\n            width: this.state.mapClass.width.substring(0, this.state.mapClass.width.length - 2)\r\n        });\r\n\r\n        map.svg.selectAll(\"g\").attr(\"transform\", \"translate(\" + dimension.x + \",\" + dimension.y + \")scale(\" + dimension.scale + \")\");\r\n        return map;\r\n    };\r\n\r\n    renderLegend = () => {\r\n        if (this.state.data.legendSet) {\r\n            return (\r\n                <div className={this.styles.legendContainer}>\r\n                    <div className={this.styles.legendWrapper}\r\n                         style={{\r\n                             width: this.state.data.legendSet.length * this.state.legendBlockSize + \"vw\",\r\n                             minWidth: 38 * this.state.data.legendSet.length + \"px\"\r\n                         }}>\r\n                        {this.state.data.legendSet.map((legend) => (\r\n                            <Tooltip title={legend.display} placement={\"top\"} key={legend.display}>\r\n                                <div className={this.styles.legendBlock}\r\n                                     style={{backgroundColor: legend.color, width: this.state.legendBlockSize + \"vw\"}}\r\n                                     onMouseOver={() => this.onLegendBlockMouseOver(legend.valueSet)}\r\n                                     onMouseOut={() => this.onLegendBlockMouseOut()}\r\n                                     onClick={() => this.openLegendDialog(legend)}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {\r\n            map.removeChild(child);\r\n        }\r\n    };\r\n\r\n    onLegendBlockMouseOver = (values) => {\r\n        values.forEach((iso) => {\r\n            this.state.map.svg\r\n                .selectAll('.' + iso)\r\n                .transition()\r\n                .style('stroke-width', this.state.highlightStrokeWidth)\r\n                .style('stroke', this.state.highlightBorderColor);\r\n        });\r\n    };\r\n\r\n    onLegendBlockMouseOut = () => {\r\n        this.state.map.svg\r\n            .selectAll('.datamaps-subunit')\r\n            .transition()\r\n            .style('stroke', this.state.borderDefault);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"mapContainer\" style={this.state.mapClass} ref={this.mapRef}/>\r\n                {this.renderLegend()}\r\n                <CountrySelectDialog onRef={instance => {\r\n                    this.countrySelectDialog = instance;\r\n                }}/>\r\n                <LegendSelectDialog onRef={instance => {\r\n                    this.legendSelectDialog = instance;\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    selectedArea: PropTypes.object.isRequired,\r\n    selectedType: PropTypes.string.isRequired,\r\n    selectedYear: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n    legendContainer: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '-5px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '-10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: '-17px',\r\n        },\r\n    },\r\n    legendWrapper: {\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    legendBlock: {\r\n        borderTop: '2px solid #ffffff',\r\n        borderBottom: '2px solid #ffffff',\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        minWidth: '38px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '4px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '12px'\r\n        },\r\n        '&:hover': {\r\n            borderTop: '2px solid ' + utilData.colors.highlight.dark,\r\n            borderBottom: '2px solid ' + utilData.colors.highlight.dark,\r\n        },\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MapElement);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            bottomPaddingTop: 0,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72,\r\n            selectedArea: utilData.mapProjection['world'].key\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSelect = this.renderSelect.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.onSelectedAreaChange = this.onSelectedAreaChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n        console.log(document.getElementById('bottom').clientHeight)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelect = (name, valueSource, dataSource, onChange, displayName) => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay} style={{marginRight: '15px'}}>\r\n                <Select name={name} displayEmpty value={this.state[valueSource]} onChange={(event) => onChange(event)}\r\n                        disableUnderline={true}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        {displayName}\r\n                    </MenuItem>\r\n                    {Object.keys(dataSource).map((key) => {\r\n                        return (\r\n                            <MenuItem value={dataSource[key].key} key={dataSource[key].key}\r\n                                      style={{textAlign: 'center'}}>\r\n                                <span className={this.styles.menuItem}>{dataSource[key].display}</span>\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length - 1}\r\n                        step={1}\r\n                        onChange={(event, value) => {\r\n                            this.setState({yearSelected: value})\r\n                        }}\r\n                        thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens\r\n                            style={{color: utilData.colors.world.medium}}/></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + \"in \" + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({\r\n            mapClass: this.prepareMapClass()\r\n        });\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height = document.documentElement.clientHeight * 0.65;\r\n        let width = height * 11 / 5;\r\n        if (width >= document.documentElement.clientWidth) {\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width / 11 * 5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height + \"px\",\r\n            width: width + \"px\",\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let resource = {};\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n        let legend = this.state.data[\"typeYearDataSet\"][key][\"legend\"];\r\n\r\n        let rawData = {};\r\n        let dataset = {};\r\n\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let paletteScale = scaleLinear()\r\n            .domain([0, legend != null ? legend[legend.length - 1] : Math.max.apply(null, onlyValues)])\r\n            .range([\"#EFEFFF\", utilData.colors.world.dark]);\r\n\r\n        //prepare legend\r\n        let separator = this.state.data[\"typeYearDataSet\"][key][\"legendSeparator\"];\r\n        let legendSet = [];\r\n        if (legend) {\r\n            for (let i = 0; i < legend.length - 1; i++) {\r\n                legendSet.push({\r\n                    display: legend[i] + separator + \" - \" + legend[i + 1] + separator,\r\n                    color: paletteScale(legend[i]),\r\n                    value: [legend[i], legend[i + 1]],\r\n                    valueSet: []\r\n                })\r\n            }\r\n            legendSet.push({\r\n                display: \"> \" + legend[legend.length - 1] + separator,\r\n                color: paletteScale(legend[legend.length - 1]),\r\n                value: [legend[legend.length - 1], Number.MAX_SAFE_INTEGER],\r\n                valueSet: []\r\n            })\r\n        }\r\n\r\n        //prepare data\r\n        data.forEach((o) => {//\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = {numberOfThings: value, fillColor: paletteScale(value)};\r\n            for (let i = 0; i < legendSet.length; i++) {\r\n                let l = legendSet[i];\r\n                if (l.value[0] <= value && l.value[1] > value) {\r\n                    l.valueSet.push(iso);\r\n                }\r\n                legendSet[i] = l;\r\n            }\r\n            rawData[iso] = o;\r\n        });\r\n        utilData.countryCodeISO.forEach((iso) => {\r\n            if (!dataset[iso]) {\r\n                dataset[iso] = {numberOfThings: -1, fillColor: '#ddd'};\r\n            }\r\n        });\r\n\r\n        let groupedDataSet = {};\r\n        this.state.data.dataSet.forEach((d) => {\r\n            groupedDataSet[d.key] = d;\r\n        });\r\n\r\n        resource.dataset = dataset;\r\n        resource.legendSet = legendSet;\r\n        resource.fullData = {};\r\n        resource.fullData.data = this.state.data[\"typeYearDataSet\"][key][\"data\"];\r\n        resource.fullData.worldAverage = this.state.data[\"typeYearDataSet\"][key][\"average\"];\r\n        resource.separator = separator;\r\n        resource.rawData = rawData;\r\n        resource.groupedDataSet = groupedDataSet;\r\n\r\n        return resource;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    onSelectedAreaChange = (event) => {\r\n        this.setState({\r\n            selectedArea: event.target.value\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay) {\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        } else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height: '6vh'}}>\r\n                            {this.renderSelect(\"type\", \"selectedType\", utilData.typePair, this.onSelectTypeChange, \"Types\")}\r\n                            {this.renderSelect(\"area\", \"selectedArea\", utilData.mapProjection, this.onSelectedAreaChange, \"Areas\")}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()}\r\n                                    selectedArea={utilData.mapProjection[this.state.selectedArea]}\r\n                                    selectedType={this.state.selectedType}\r\n                                    selectedYear={this.state.yearSet[this.state.yearSelected]}/>\r\n                    </div>\r\n                </Card>\r\n                <div className={this.styles.bottomWrapper} style={{width: '100vw', height: '6vh'}}>\r\n                    <div id={\"bottom\"} className={this.styles.bottom}>\r\n                        <div style={{width: '3vw', minWidth: '25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={() => this.togglePlay(false)}/> :\r\n                                <PlayArrow onClick={() => this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '25px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        height: '65vh',\r\n        paddingTop: '4.5vh',\r\n        paddingBottom: '2.5vh'\r\n    },\r\n    bottom: {\r\n        display: \"flex\",\r\n        margin: \"auto\",\r\n        flexDirection: \"row\",\r\n        width: \"55vw\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop: \"0px\"\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: \"5px\"\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            paddingTop: \"10px\"\r\n        }\r\n    },\r\n    bottomWrapper: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: \"-35px\",\r\n            zIndex:100\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: \"0px\"\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: \"0px\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from 'react-router-dom';\n\nclass Data extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n    }\n\n    render() {\n        return (\n            <div>\n                Test pull request from lyucheng\n            </div>\n        );\n    }\n}\n\nData.propTypes = {\n\n};\n\nexport default Data;\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.styles.container}>\r\n                <div className={this.styles.titleWrapper}>\r\n                    <span className={this.styles.mainTitle}>Smoke Till My Last Breath</span>\r\n                </div>\r\n                <div className={this.styles.titleWrapper} style={{marginTop: '22px'}}>\r\n                    <span className={this.styles.subTitle}>Is So Good</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: '100vw',\r\n        marginTop: '100px'\r\n    },\r\n    titleWrapper:{\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        fontFamily: 'Verdana, Geneva, sans-serif'\r\n    },\r\n    mainTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '24px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '40px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '55px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    subTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '14px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '20px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    }\r\n});\r\n\r\nDefault.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Default);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n    componentDidMount(){\n        document.title = \"Chainsmokers\";\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Home/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}