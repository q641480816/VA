{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/common/utils.js","js/map/mapElement/mapElement.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","mapProjection","projection","console","log","d3","MapElement","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPupUp","geography","data","content","numberOfThings","properties","name","drawMap","Datamaps","scope","element","document","getElementById","responsive","dataType","fills","defaultFill","state","dataset","geographyConfig","borderColor","borderDefault","borderWidth","defaultStrokeWidth","highlightBorderColor","highlightBorderWidth","highlightStrokeWidth","highlightFillColor","o","highlightOnHover","popupTemplate","svg","selectAll","attr","selectedArea","renderLegend","legendSet","styles","legendContainer","legendWrapper","length","legendBlockSize","legend","Tooltip_default","placement","legendBlock","onMouseOver","onLegendBlockMouseOver","valueSet","onMouseOut","onLegendBlockMouseOut","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","child","removeChild","values","forEach","iso","mapClass","React","createRef","bind","assertThisInitialized","window","addEventListener","setState","nextProps","updateChoropleth","prevProps","prevState","snapshot","id","ref","Component","_legendContainer","_legendBlock","marginTop","up","flexDirection","Map","renderSelectType","FormControl_default","disabled","isAutoPlay","Select_default","displayEmpty","value","selectedType","onChange","event","onSelectTypeChange","disableUnderline","MenuItem_default","keys","menuItem","renderSelectArea","paddingLeft","target","p","renderSlider","Slider_default","yearSelected","min","max","yearSet","step","thumb","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","marginRight","processData","resource","onlyValues","paletteScale","scaleLinear","domain","Math","apply","range","separator","i","push","Number","MAX_SAFE_INTEGER","countryCode","fillColor","l","togglePlay","isPlay","play","year","setTimeout","mapBoxHeight","removeEventListener","_this2","Card_default","AppBar_default","configBar","Toolbar_default","mapContainer","mapElement","_menuItem","_descriptionContent","fontSize","borderRadius","fonWeight","paddingTop","paddingBottom","Data","Default","container","titleWrapper","mainTitle","subTitle","_mainTitle","_subTitle","textAlign","fontFamily","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","history","renderMap","js_map_map","navigateButton","Route","exact","path","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21af011c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    //fetchUrl: \"http://localhost:8080/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate in '\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent in '\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent in '\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption in '\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking in '\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death in '\r\n        }\r\n    },\r\n    mapProjection: [\r\n        {\r\n            display: 'World',\r\n            projection: 'translate(0,0)scale(1)'\r\n        }, {\r\n            display: 'Asia',\r\n            projection: 'translate(-700,-70)scale(1.85)'\r\n        }, {\r\n            display: 'Oceania & ASEAN',\r\n            projection: 'translate(-1250,-350)scale(1.95)'\r\n        }, {\r\n            display: 'Europe',\r\n            projection: 'translate(-850,0)scale(2.4)'\r\n        }, {\r\n            display: 'Africa',\r\n            projection: 'translate(-650,-280)scale(2)'\r\n        },{\r\n            display: 'North America',\r\n            projection: 'translate(150,-60)scale(1.85)'\r\n        },{\r\n            display: 'South America',\r\n            projection: 'translate(-100,-420)scale(1.98)'\r\n        }\r\n    ]\r\n};\r\n\r\nexport default utilData;\r\n\r\n// sudo cp -a . /var/www/\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport * as d3 from \"d3\";\r\nimport utilData from \"../../common/utils\";\r\n\r\nconsole.log(d3);\r\n\r\nclass MapElement extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null,\r\n            legendBlockSize: 7,\r\n            borderDefault: '#DEDEDE',\r\n            highlightBorderColor: '#FFFF00',\r\n            highlightStrokeWidth: 1,\r\n            defaultStrokeWidth: 0.45,\r\n            selectedArea: utilData.mapProjection[0]\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n        this.styles = this.props.classes;\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n        this.renderLegend = this.renderLegend.bind(this);\r\n        this.onLegendBlockMouseOver = this.onLegendBlockMouseOver.bind(this);\r\n        this.onLegendBlockMouseOut = this.onLegendBlockMouseOut.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        window.addEventListener(\"resize\", ()=>{});\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n            selectedArea: this.props.selectedArea\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let map = this.state.map;\r\n\r\n        if (nextProps.data !== this.state.data) {\r\n            map.updateChoropleth(nextProps.data.dataset);\r\n        }\r\n\r\n        if (nextProps.selectedArea !== this.state.selectedArea) {\r\n            map.svg.selectAll(\"g\").attr(\"transform\", nextProps.selectedArea.projection);\r\n        }\r\n\r\n        this.setState({\r\n            data: nextProps.data,\r\n            map: map,\r\n            mapClass: nextProps.mapClass,\r\n            selectedArea: nextProps.selectedArea\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data === null ? 'No Data Available' : data.numberOfThings;\r\n        return(\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n                '<span>' + geography.properties.name + '</span>' +\r\n                '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n            )\r\n    };\r\n\r\n    drawMap = () => {\r\n        //USA\r\n        let map = new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"mapContainer\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            data: this.state.data.dataset,\r\n            geographyConfig: {\r\n                borderColor: this.state.borderDefault,\r\n                borderWidth: this.state.defaultStrokeWidth,\r\n                highlightBorderColor: this.state.highlightBorderColor,\r\n                highlightBorderWidth: this.state.highlightStrokeWidth,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n\r\n        map.svg.selectAll(\"g\").attr(\"transform\", this.state.selectedArea.projection);\r\n        return map;\r\n    };\r\n\r\n    renderLegend = () => {\r\n        if (this.state.data.legendSet){\r\n            return(\r\n                <div className={this.styles.legendContainer}>\r\n                    <div className={this.styles.legendWrapper}\r\n                         style={{width: this.state.data.legendSet.length*this.state.legendBlockSize + \"vw\", minWidth: 38*this.state.data.legendSet.length+\"px\"}}>\r\n                        {this.state.data.legendSet.map((legend) => (\r\n                            <Tooltip title={legend.display} placement={\"top\"} key={legend.display}>\r\n                                <div className={this.styles.legendBlock} style={{backgroundColor: legend.color, width: this.state.legendBlockSize + \"vw\"}}\r\n                                     onMouseOver={() => this.onLegendBlockMouseOver(legend.valueSet)} onMouseOut={() => this.onLegendBlockMouseOut()}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {map.removeChild(child);}\r\n    };\r\n\r\n    onLegendBlockMouseOver = (values) => {\r\n        values.forEach((iso) => {\r\n            this.state.map.svg\r\n                .selectAll('.' + iso)\r\n                .transition()\r\n                .style('stroke-width', this.state.highlightStrokeWidth)\r\n                .style('stroke', this.state.highlightBorderColor);\r\n        });\r\n    };\r\n\r\n    onLegendBlockMouseOut = () => {\r\n        this.state.map.svg\r\n            .selectAll('.datamaps-subunit')\r\n            .transition()\r\n            .style('stroke', this.state.borderDefault);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"mapContainer\" style={this.state.mapClass} ref={this.mapRef} />\r\n                {this.renderLegend()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    selectedArea: PropTypes.object.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n    legendContainer: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '-5px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '-10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: '-17px',\r\n        },\r\n    },\r\n    legendWrapper: {\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    legendBlock: {\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        minWidth: '38px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '4px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '12px'\r\n        }\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MapElement);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72,\r\n            selectedArea: utilData.mapProjection[0]\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderSelectType = this.renderSelectType.bind(this);\r\n        this.renderSelectArea = this.renderSelectArea.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelectType = () => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay}>\r\n                <Select name=\"type\" displayEmpty value={this.state.selectedType} onChange={(event) => this.onSelectTypeChange(event)} disableUnderline={true}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        Types\r\n                    </MenuItem>\r\n                    {Object.keys(utilData.typePair).map((key) => {\r\n                            return (\r\n                                <MenuItem value={utilData.typePair[key].key} key={utilData.typePair[key].key}>\r\n                                    <span className={this.styles.menuItem}>{utilData.typePair[key].display}</span>\r\n                                </MenuItem>\r\n                            )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSelectArea = () => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay} style={{paddingLeft: '10px'}}>\r\n                <Select name=\"area\" displayEmpty value={this.state.selectedArea}\r\n                        onChange={(event) => this.setState({selectedArea: event.target.value})} disableUnderline={true}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        Areas\r\n                    </MenuItem>\r\n                    {utilData.mapProjection.map((p) => {\r\n                        return (\r\n                            <MenuItem value={p} key={p.display}>\r\n                                <span className={this.styles.menuItem}>{p.display}</span>\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length-1} step={1}\r\n                    onChange={(event, value)=>{this.setState({yearSelected:value})}}\r\n                    thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens style={{ color: '#2196f3' }} /></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({mapClass: this.prepareMapClass()});\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height =  document.documentElement.clientHeight * 0.65;\r\n        let width = height*11/5;\r\n        if (width >= document.documentElement.clientWidth){\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width/11*5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height+\"px\",\r\n            width: width+\"px\",\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let resource = {};\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n        let legend = this.state.data[\"typeYearDataSet\"][key][\"legend\"];\r\n\r\n        let dataset = {};\r\n\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let paletteScale = scaleLinear()\r\n            .domain([0, legend != null ? legend[legend.length - 1] : Math.max.apply(null, onlyValues)])\r\n            .range([\"#EFEFFF\",\"#02386F\"]);\r\n\r\n        //prepare legend\r\n        let separator = this.state.data[\"typeYearDataSet\"][key][\"legendSeparator\"];\r\n        let legendSet = [];\r\n        if (legend){\r\n            for (let i = 0; i < legend.length - 1; i++){\r\n                legendSet.push({\r\n                    display: legend[i] + separator + \" - \" + legend[i + 1] + separator,\r\n                    color: paletteScale(legend[i]),\r\n                    value: [legend[i], legend[i + 1]],\r\n                    valueSet: []\r\n                })\r\n            }\r\n            legendSet.push({\r\n                display: \"> \" + legend[legend.length-1] + separator,\r\n                color: paletteScale(legend[legend.length-1]),\r\n                value: [legend[legend.length-1], Number.MAX_SAFE_INTEGER],\r\n                valueSet: []\r\n            })\r\n        }\r\n\r\n        //prepare data\r\n        data.forEach((o) => { //\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value) };\r\n            for(let i = 0; i < legendSet.length; i++){\r\n                let l = legendSet[i];\r\n                if (l.value[0] <= value && l.value[1] > value) {\r\n                    l.valueSet.push(iso);\r\n                }\r\n                legendSet[i] = l;\r\n            }\r\n        });\r\n\r\n        resource.dataset = dataset;\r\n        resource.legendSet = legendSet;\r\n\r\n        return resource;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay){\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        }else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height:'6vh'}}>\r\n                            {this.renderSelectType()}\r\n                            {this.renderSelectArea()}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()} selectedArea={this.state.selectedArea}/>\r\n                    </div>\r\n                </Card>\r\n                <div style={{width: '100vw', height: '6vh'}}>\r\n                    <div className={\"bottom\"}>\r\n                        <div style={{width: '3vw', minWidth:'25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={()=>this.togglePlay(false)}/> : <PlayArrow onClick={()=>this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '35px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        height: '65vh',\r\n        paddingTop: '4.5vh',\r\n        paddingBottom: '2.5vh'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Data extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Data\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nData.propTypes = {\r\n\r\n};\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.styles.container}>\r\n                <div className={this.styles.titleWrapper}>\r\n                    <span className={this.styles.mainTitle}>Smoking Everyday</span>\r\n                </div>\r\n                <div className={this.styles.titleWrapper} style={{marginTop: '22px'}}>\r\n                    <span className={this.styles.subTitle}>Is So Good</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: '100vw',\r\n        marginTop: '100px'\r\n    },\r\n    titleWrapper:{\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        fontFamily: 'Verdana, Geneva, sans-serif'\r\n    },\r\n    mainTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '24px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '40px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '55px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    subTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '14px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '20px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    }\r\n});\r\n\r\nDefault.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Default);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n    componentDidMount(){\n        document.title = \"Chainsmokers\";\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Home/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}