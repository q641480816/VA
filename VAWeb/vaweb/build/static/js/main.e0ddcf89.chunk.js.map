{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/common/utils.js","js/component/baseDialog/baseDialog.js","js/map/countrySelectDialog/countrySelectDialog.js","js/map/mapElement/mapElement.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","mapProjection","world","projection","asia","OceaniaASEAN","europe","africa","northAmerica","southAmerica","colors","dark","main","medium","light","country","highlight","BaseDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","isOpen","handleClose","state","styles","bind","assertThisInitialized","onRef","nextProps","Dialog_default","open","onClose","DialogTitle_default","id","DialogContent_default","children","Component","dialog","container","CountrySelectDialog","openDialog","data","selectedType","values","selectedCountry","length","countryName","alert","drawChart","prepareLineChart","labels","keys","sort","datasets","selectDataset","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","d","forEach","year","push","prepareLineChartData","worldDataset","prepareWorldData","chart","_this2","baseDialog","instance","es","options","maintainAspectRatio","flexDirection","MapElement","getPupUp","geography","content","numberOfThings","properties","name","prepareCountrySelectData","iso","source","fullData","worldAverage","i","countryCode","drawMap","Datamaps","scope","element","document","getElementById","responsive","dataType","fills","defaultFill","done","datamap","svg","selectAll","on","countrySelectDialog","dataset","geographyConfig","borderDefault","borderWidth","defaultStrokeWidth","highlightBorderColor","highlightBorderWidth","highlightStrokeWidth","highlightFillColor","o","highlightOnHover","popupTemplate","attr","selectedArea","renderLegend","legendSet","legendContainer","legendWrapper","legendBlockSize","legend","Tooltip_default","placement","legendBlock","onMouseOver","onLegendBlockMouseOver","valueSet","onMouseOut","onLegendBlockMouseOut","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","child","removeChild","mapClass","React","createRef","window","addEventListener","updateChoropleth","prevProps","prevState","snapshot","ref","_legendContainer","_legendBlock","marginTop","up","borderTop","borderBottom","Map","renderSelect","valueSource","dataSource","onChange","displayName","FormControl_default","disabled","isAutoPlay","marginRight","Select_default","displayEmpty","value","event","disableUnderline","MenuItem_default","textAlign","menuItem","renderSlider","Slider_default","yearSelected","min","max","yearSet","step","thumb","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","processData","resource","onlyValues","paletteScale","scaleLinear","domain","Math","apply","range","separator","Number","MAX_SAFE_INTEGER","fillColor","l","onSelectTypeChange","target","onSelectedAreaChange","togglePlay","isPlay","play","setTimeout","mapBoxHeight","removeEventListener","Card_default","AppBar_default","configBar","Toolbar_default","mapContainer","mapElement","_menuItem","_descriptionContent","fontSize","borderRadius","fonWeight","paddingTop","paddingBottom","Data","Default","titleWrapper","mainTitle","subTitle","_mainTitle","_subTitle","fontFamily","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","console","log","history","renderMap","js_map_map","navigateButton","Route","exact","path","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0ddcf89.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    //fetchUrl: \"http://localhost:8080/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate in '\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent in '\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent in '\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption in '\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking in '\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death in '\r\n        }\r\n    },\r\n    mapProjection: {\r\n        world: {\r\n            key: 'world',\r\n            display: 'World',\r\n            projection: 'translate(0,0)scale(1)'\r\n        },\r\n        asia: {\r\n            key: 'asia',\r\n            display: 'Asia',\r\n            projection: 'translate(-700,-70)scale(1.85)'\r\n        },\r\n        OceaniaASEAN: {\r\n            key: 'OceaniaASEAN',\r\n            display: 'Oceania & ASEAN',\r\n            projection: 'translate(-1250,-350)scale(1.95)'\r\n        },\r\n        europe: {\r\n            key: 'europe',\r\n            display: 'Europe',\r\n            projection: 'translate(-850,0)scale(2.4)'\r\n        },\r\n        africa: {\r\n            key: 'africa',\r\n            display: 'Africa',\r\n            projection: 'translate(-650,-280)scale(2)'\r\n        },\r\n        northAmerica: {\r\n            key: 'northAmerica',\r\n            display: 'North America',\r\n            projection: 'translate(150,-60)scale(1.85)'\r\n        },\r\n        southAmerica: {\r\n            key: 'southAmerica',\r\n            display: 'South America',\r\n            projection: 'translate(-100,-420)scale(1.98)'\r\n        }\r\n    },\r\n    colors: {\r\n        world: {\r\n            dark: '#072F66',\r\n            main: \"#0B3D82\",\r\n            medium: '#3266AD',\r\n            light: '#5481BE',\r\n        },\r\n        country: {\r\n            dark: '#8F480D',\r\n            main: \"#B56726\",\r\n            medium: '#F5AE73',\r\n            light: '#FFCDA3',\r\n        },\r\n        highlight: {\r\n            dark: '#FCE20A',\r\n            main: \"#FFEA39\",\r\n            medium: '#FFF181',\r\n            light: '#FFF6AF',\r\n        }\r\n    }\r\n};\r\n\r\nexport default utilData;\r\n\r\n// sudo cp -a . /var/www/\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass BaseDialog extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            isOpen: false\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    handleClickOpen = (title) => {\r\n        this.setState({\r\n            title: title,\r\n            isOpen: true\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    render () {\r\n        return(\r\n            <Dialog open={this.state.isOpen} onClose={this.handleClose}>\r\n                <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\r\n                <DialogContent>\r\n                    {this.props.children}\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    dialog: {\r\n    },\r\n    container: {}\r\n});\r\n\r\n\r\nBaseDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BaseDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport BaseDialog from \"../../component/baseDialog/baseDialog\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport utilData from \"../../common/utils\";\r\n\r\nclass CountrySelectDialog extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            chart: null,\r\n            selectedType: null\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.openDialog = this.openDialog.bind(this);\r\n        this.drawChart = this.drawChart.bind(this);\r\n        this.prepareLineChart = this.prepareLineChart.bind(this);\r\n    }\r\n\r\n    componentWillMount(){}\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        //\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){}\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    openDialog = (data, selectedType) => {\r\n        this.setState({\r\n            data: Object.values(data.selectedCountry).length !== 0? data : null,\r\n            selectedType: selectedType\r\n        });\r\n\r\n        if (Object.values(data.selectedCountry).length !== 0) {\r\n            this.dialog.handleClickOpen(utilData.typePair[this.state.selectedType].display + \" in \" + Object.values(data.selectedCountry)[0].countryName);\r\n        }else {\r\n            alert(\"N/A\")\r\n        }\r\n    };\r\n\r\n    drawChart = () => {\r\n\r\n    };\r\n\r\n    prepareLineChart = () => {\r\n        let prepareLineChartData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.selectedCountry[year][this.state.selectedType]));\r\n            return d;\r\n        };\r\n        let prepareWorldData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.world[year]));\r\n            return d;\r\n        };\r\n        let data = {};\r\n        data.labels = Object.keys(this.state.data.selectedCountry).sort();\r\n        data.datasets = [];\r\n        let selectDataset = {\r\n            label: this.state.data.selectedCountry[data.labels[0]].countryName,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.country.main,\r\n            borderColor: utilData.colors.country.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.country.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.country.main,\r\n            pointHoverBorderColor: utilData.colors.country.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareLineChartData()\r\n        };\r\n        let worldDataset = {\r\n            label: \"World\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.world.main,\r\n            borderColor: utilData.colors.world.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.world.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.world.main,\r\n            pointHoverBorderColor: utilData.colors.world.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareWorldData()\r\n        };\r\n\r\n        data.datasets.push(selectDataset, worldDataset);\r\n        return data;\r\n    };\r\n\r\n    render () {\r\n        if (this.state.data != null) {\r\n            return (\r\n                <BaseDialog onRef={instance => {\r\n                    this.dialog = instance;\r\n                }}>\r\n                    <div className={this.styles.container}>\r\n                        <Line width={600} height={350} options={{maintainAspectRatio: false}} data={this.prepareLineChart()}/>\r\n                    </div>\r\n                </BaseDialog>\r\n            )\r\n        }else {\r\n            return(\r\n                <div/>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column'\r\n    }\r\n});\r\n\r\n\r\nCountrySelectDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CountrySelectDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport utilData from \"../../common/utils\";\r\nimport CountrySelectDialog from \"../countrySelectDialog/countrySelectDialog\";\r\n\r\nclass MapElement extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null,\r\n            legendBlockSize: 7,\r\n            borderDefault: '#DEDEDE',\r\n            highlightBorderColor: utilData.colors.highlight.dark,\r\n            highlightStrokeWidth: 1,\r\n            defaultStrokeWidth: 0.45,\r\n            selectedArea: utilData.mapProjection[0],\r\n            selectedType: \"prevalenceInPercent\"\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n        this.styles = this.props.classes;\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n        this.renderLegend = this.renderLegend.bind(this);\r\n        this.onLegendBlockMouseOver = this.onLegendBlockMouseOver.bind(this);\r\n        this.onLegendBlockMouseOut = this.onLegendBlockMouseOut.bind(this);\r\n        this.prepareCountrySelectData = this.prepareCountrySelectData.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        window.addEventListener(\"resize\", ()=>{});\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n            selectedArea: this.props.selectedArea,\r\n            selectedType: this.props.selectedType\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let map = this.state.map;\r\n\r\n        if (nextProps.data !== this.state.data) {\r\n            map.updateChoropleth(nextProps.data.dataset);\r\n        }\r\n\r\n        if (nextProps.selectedArea !== this.state.selectedArea) {\r\n            map.svg.selectAll(\"g\").attr(\"transform\", nextProps.selectedArea.projection);\r\n        }\r\n\r\n        this.setState({\r\n            data: nextProps.data,\r\n            map: map,\r\n            mapClass: nextProps.mapClass,\r\n            selectedArea: nextProps.selectedArea,\r\n            selectedType: nextProps.selectedType\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data === null ? 'No Data Available' : data.numberOfThings;\r\n        return(\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n                '<span>' + geography.properties.name + '</span>' +\r\n                '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n            )\r\n    };\r\n\r\n    prepareCountrySelectData = (iso) => {\r\n        let source = this.state.data.fullData;\r\n        let data = {selectedCountry: {}, world: source.worldAverage, source: source};\r\n\r\n        Object.keys(source.data).forEach((year) => {\r\n            for (let i = 0; i < source.data[year].length; i++){\r\n                if (source.data[year][i].countryCode === iso){\r\n                    data.selectedCountry[year] = source.data[year][i];\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    };\r\n\r\n    drawMap = () => {\r\n        //USA\r\n        let map = new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"mapContainer\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            done: (datamap) => {\r\n                datamap.svg.selectAll('.datamaps-subunit').on('click', (geography) => {\r\n                    //console.log((this.prepareCountrySelectData(geography.properties.iso)));\r\n                    this.countrySelectDialog.openDialog(this.prepareCountrySelectData(geography.properties.iso), this.state.selectedType);\r\n                });\r\n            },\r\n            data: this.state.data.dataset,\r\n            geographyConfig: {\r\n                borderColor: this.state.borderDefault,\r\n                borderWidth: this.state.defaultStrokeWidth,\r\n                highlightBorderColor: this.state.highlightBorderColor,\r\n                highlightBorderWidth: this.state.highlightStrokeWidth,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n\r\n        map.svg.selectAll(\"g\").attr(\"transform\", this.state.selectedArea.projection);\r\n        return map;\r\n    };\r\n\r\n    renderLegend = () => {\r\n        if (this.state.data.legendSet){\r\n            return(\r\n                <div className={this.styles.legendContainer}>\r\n                    <div className={this.styles.legendWrapper}\r\n                         style={{width: this.state.data.legendSet.length*this.state.legendBlockSize + \"vw\", minWidth: 38*this.state.data.legendSet.length+\"px\"}}>\r\n                        {this.state.data.legendSet.map((legend) => (\r\n                            <Tooltip title={legend.display} placement={\"top\"} key={legend.display}>\r\n                                <div className={this.styles.legendBlock} style={{backgroundColor: legend.color, width: this.state.legendBlockSize + \"vw\"}}\r\n                                     onMouseOver={() => this.onLegendBlockMouseOver(legend.valueSet)} onMouseOut={() => this.onLegendBlockMouseOut()}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {map.removeChild(child);}\r\n    };\r\n\r\n    onLegendBlockMouseOver = (values) => {\r\n        values.forEach((iso) => {\r\n            this.state.map.svg\r\n                .selectAll('.' + iso)\r\n                .transition()\r\n                .style('stroke-width', this.state.highlightStrokeWidth)\r\n                .style('stroke', this.state.highlightBorderColor);\r\n        });\r\n    };\r\n\r\n    onLegendBlockMouseOut = () => {\r\n        this.state.map.svg\r\n            .selectAll('.datamaps-subunit')\r\n            .transition()\r\n            .style('stroke', this.state.borderDefault);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"mapContainer\" style={this.state.mapClass} ref={this.mapRef} />\r\n                {this.renderLegend()}\r\n                <CountrySelectDialog onRef={instance => { this.countrySelectDialog = instance; }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    selectedArea: PropTypes.object.isRequired,\r\n    selectedType: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n    legendContainer: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '-5px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '-10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: '-17px',\r\n        },\r\n    },\r\n    legendWrapper: {\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    legendBlock: {\r\n        borderTop: '2px solid #ffffff',\r\n        borderBottom: '2px solid #ffffff',\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        minWidth: '38px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '4px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '12px'\r\n        },\r\n        '&:hover': {\r\n            borderTop: '2px solid ' + utilData.colors.highlight.dark,\r\n            borderBottom: '2px solid ' + utilData.colors.highlight.dark,\r\n        },\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MapElement);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72,\r\n            selectedArea: utilData.mapProjection['world'].key\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSelect = this.renderSelect.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.onSelectedAreaChange = this.onSelectedAreaChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelect = (name, valueSource, dataSource, onChange, displayName) => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay} style={{marginRight: '15px'}}>\r\n                <Select name={name} displayEmpty value={this.state[valueSource]} onChange={(event) => onChange(event)} disableUnderline={true}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        {displayName}\r\n                    </MenuItem>\r\n                    {Object.keys(dataSource).map((key) => {\r\n                        return (\r\n                            <MenuItem value={dataSource[key].key} key={dataSource[key].key} style={{textAlign: 'center'}}>\r\n                                <span className={this.styles.menuItem}>{dataSource[key].display}</span>\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length-1} step={1}\r\n                    onChange={(event, value)=>{this.setState({yearSelected:value})}}\r\n                    thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens style={{ color: utilData.colors.world.medium }} /></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({mapClass: this.prepareMapClass()});\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height =  document.documentElement.clientHeight * 0.65;\r\n        let width = height*11/5;\r\n        if (width >= document.documentElement.clientWidth){\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width/11*5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height+\"px\",\r\n            width: width+\"px\",\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let resource = {};\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n        let legend = this.state.data[\"typeYearDataSet\"][key][\"legend\"];\r\n\r\n        let dataset = {};\r\n\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let paletteScale = scaleLinear()\r\n            .domain([0, legend != null ? legend[legend.length - 1] : Math.max.apply(null, onlyValues)])\r\n            .range([\"#EFEFFF\",utilData.colors.world.dark]);\r\n\r\n        //prepare legend\r\n        let separator = this.state.data[\"typeYearDataSet\"][key][\"legendSeparator\"];\r\n        let legendSet = [];\r\n        if (legend){\r\n            for (let i = 0; i < legend.length - 1; i++){\r\n                legendSet.push({\r\n                    display: legend[i] + separator + \" - \" + legend[i + 1] + separator,\r\n                    color: paletteScale(legend[i]),\r\n                    value: [legend[i], legend[i + 1]],\r\n                    valueSet: []\r\n                })\r\n            }\r\n            legendSet.push({\r\n                display: \"> \" + legend[legend.length-1] + separator,\r\n                color: paletteScale(legend[legend.length-1]),\r\n                value: [legend[legend.length-1], Number.MAX_SAFE_INTEGER],\r\n                valueSet: []\r\n            })\r\n        }\r\n\r\n        //prepare data\r\n        data.forEach((o) => { //\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value) };\r\n            for(let i = 0; i < legendSet.length; i++){\r\n                let l = legendSet[i];\r\n                if (l.value[0] <= value && l.value[1] > value) {\r\n                    l.valueSet.push(iso);\r\n                }\r\n                legendSet[i] = l;\r\n            }\r\n        });\r\n\r\n        resource.dataset = dataset;\r\n        resource.legendSet = legendSet;\r\n        resource.fullData = {};\r\n        resource.fullData.data = this.state.data[\"typeYearDataSet\"][key][\"data\"];\r\n        resource.fullData.worldAverage = this.state.data[\"typeYearDataSet\"][key][\"average\"];\r\n\r\n        return resource;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    onSelectedAreaChange = (event) => {\r\n        this.setState({\r\n            selectedArea: event.target.value\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay){\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        }else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height:'6vh'}}>\r\n                            {this.renderSelect(\"type\", \"selectedType\", utilData.typePair, this.onSelectTypeChange, \"Types\")}\r\n                            {this.renderSelect(\"area\", \"selectedArea\", utilData.mapProjection, this.onSelectedAreaChange, \"Areas\")}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()} selectedArea={utilData.mapProjection[this.state.selectedArea]} selectedType={this.state.selectedType}/>\r\n                    </div>\r\n                </Card>\r\n                <div style={{width: '100vw', height: '6vh'}}>\r\n                    <div className={\"bottom\"}>\r\n                        <div style={{width: '3vw', minWidth:'25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={()=>this.togglePlay(false)}/> : <PlayArrow onClick={()=>this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '35px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        height: '65vh',\r\n        paddingTop: '4.5vh',\r\n        paddingBottom: '2.5vh'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Data extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Data\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nData.propTypes = {\r\n\r\n};\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.styles.container}>\r\n                <div className={this.styles.titleWrapper}>\r\n                    <span className={this.styles.mainTitle}>Smoke Till My Last Breath</span>\r\n                </div>\r\n                <div className={this.styles.titleWrapper} style={{marginTop: '22px'}}>\r\n                    <span className={this.styles.subTitle}>Is So Good</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: '100vw',\r\n        marginTop: '100px'\r\n    },\r\n    titleWrapper:{\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        fontFamily: 'Verdana, Geneva, sans-serif'\r\n    },\r\n    mainTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '24px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '40px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '55px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    subTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '14px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '20px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    }\r\n});\r\n\r\nDefault.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Default);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n    componentDidMount(){\n        document.title = \"Chainsmokers\";\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Home/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}