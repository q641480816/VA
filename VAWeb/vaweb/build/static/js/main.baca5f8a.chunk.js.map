{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/map/mapElement/mapElement.js","js/common/utils.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","MapElement","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPupUp","geography","data","content","numberOfThings","properties","name","drawMap","Datamaps","scope","element","document","getElementById","projection","responsive","dataType","fills","defaultFill","state","geographyConfig","borderColor","borderWidth","highlightBorderColor","highlightBorderWidth","highlightFillColor","o","highlightOnHover","popupTemplate","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","length","child","removeChild","mapClass","React","createRef","bind","assertThisInitialized","window","addEventListener","setState","nextProps","updateChoropleth","prevProps","prevState","snapshot","id","ref","Component","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","Map","renderSelectType","FormControl_default","disabled","isAutoPlay","Select_default","displayEmpty","value","selectedType","onChange","event","onSelectTypeChange","MenuItem_default","keys","styles","menuItem","renderSlider","Slider_default","yearSelected","min","max","yearSet","step","thumb","Tooltip_default","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","marginRight","processData","dataset","onlyValues","minValue","Math","apply","maxValue","paletteScale","scaleLinear","domain","range","forEach","iso","countryCode","fillColor","target","togglePlay","isPlay","play","year","setTimeout","mapBoxHeight","removeEventListener","_this2","Card_default","AppBar_default","configBar","Toolbar_default","mapContainer","mapElement_mapElement","_menuItem","_descriptionContent","_mapContainer","fontSize","up","borderRadius","fonWeight","Data","Default","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","console","log","history","push","renderMap","js_map_map","navigateButton","Route","exact","path","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baca5f8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\n\r\nimport './mapElement.css';\r\n\r\nclass MapElement extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        window.addEventListener(\"resize\", ()=>{});\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.data !== this.state.data) {\r\n            let map = this.state.map;\r\n            map.updateChoropleth(nextProps.data);\r\n            this.setState({\r\n                data: nextProps.data,\r\n                map: map,\r\n                mapClass: nextProps.mapClass\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data === null ? 'No Data Available' : data.numberOfThings;\r\n        return(\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n                '<span>' + geography.properties.name + '</span>' +\r\n                '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n            )\r\n    };\r\n\r\n    drawMap = (data) => {\r\n        let map = new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"container\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            data: data == null ? this.state.data : data,\r\n            geographyConfig: {\r\n                borderColor: '#DEDEDE',\r\n                borderWidth: 0.45,\r\n                highlightBorderColor: 'black',\r\n                highlightBorderWidth: 2,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n        return map;\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {map.removeChild(child);}\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"container\" style={this.state.mapClass} ref={this.mapRef} />\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MapElement;\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate in '\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent in '\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent in '\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption in '\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking in '\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death in '\r\n        }\r\n    }\r\n};\r\n\r\nexport default utilData;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderSelectType = this.renderSelectType.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelectType = () => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay}>\r\n                <Select name=\"type\" displayEmpty value={this.state.selectedType} onChange={(event) => this.onSelectTypeChange(event)}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        Types\r\n                    </MenuItem>\r\n                    {Object.keys(utilData.typePair).map((key) => {\r\n                            return (\r\n                                <MenuItem value={utilData.typePair[key].key} key={utilData.typePair[key].key}>\r\n                                    <span className={this.styles.menuItem}>{utilData.typePair[key].display}</span>\r\n                                </MenuItem>\r\n                            )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length-1} step={1}\r\n                    onChange={(event, value)=>{this.setState({yearSelected:value})}}\r\n                    thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens style={{ color: '#2196f3' }} /></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({mapClass: this.prepareMapClass()});\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height =  document.documentElement.clientHeight * 0.72;\r\n        let width = height/5*9;\r\n        if (width >= document.documentElement.clientWidth){\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width/9*5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height+\"px\",\r\n            width: width+\"px\"\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n\r\n        let dataset = {};\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let minValue = Math.min.apply(null, onlyValues), maxValue = Math.max.apply(null, onlyValues);\r\n        let paletteScale = scaleLinear()\r\n            .domain([minValue,maxValue])\r\n            .range([\"#EFEFFF\",\"#02386F\"]);\r\n\r\n        //prepare data\r\n        data.forEach((o) => { //\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value) };\r\n        });\r\n\r\n        return dataset;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay){\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        }else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height:'6vh'}}>\r\n                            {this.renderSelectType()}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()}/>\r\n                    </div>\r\n                </Card>\r\n                <div style={{width: '100vw', height: '6vh'}}>\r\n                    <div className={\"bottom\"}>\r\n                        <div style={{width: '3vw', minWidth:'25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={()=>this.togglePlay(false)}/> : <PlayArrow onClick={()=>this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '35px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '69vh'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '72vh'\r\n        }\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Data extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Data\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nData.propTypes = {\r\n\r\n};\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Default\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDefault.propTypes = {\r\n\r\n};\r\n\r\nexport default Default;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <Home/>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}