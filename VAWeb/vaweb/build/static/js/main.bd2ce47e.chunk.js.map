{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/common/utils.js","js/component/baseDialog/baseDialog.js","js/map/countrySelectDialog/countrySelectDialog.js","js/map/legendSelectDialog/legendSelectDialog.js","js/map/mapElement/mapElement.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","mapProjection","world","projection","asia","countries","OceaniaASEAN","europe","africa","northAmerica","southAmerica","colors","dark","main","medium","light","country","highlight","BaseDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","isOpen","handleClose","state","clicked","styles","bind","assertThisInitialized","onRef","nextProps","Dialog_default","open","maxWidth","onClose","DialogTitle_default","id","DialogContent_default","children","Component","dialog","maxHeight","container","CountrySelectDialog","openDialog","data","selectedType","worldDataSet","keys","source","forEach","year","d","sort","b","values","selectedCountry","length","countryName","alert","drawChart","prepareLineChart","labels","datasets","selectDataset","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","push","prepareLineChartData","worldDataset","prepareWorldData","prepareOption","maintainAspectRatio","tooltips","mode","callbacks","tooltipItem","datasetIndex","yLabel","substring","separator","afterBody","tooltipItems","xLabel","indexOf","scales","yAxes","ticks","callback","value","index","scaleLabel","labelString","xAxes","chart","_this2","baseDialog","instance","es","options","flexDirection","LegendSelectDialog","name","legend","renderChart","react_vis_es","animation","stroke","strokeOpacity","strokeWidth","hideRootNode","colorType","onValueMouseOver","node","handleMouseOver","onValueMouseOut","handleMouseOut","x","y","updateData","keyPath","child","fillOpacity","getKeyPath","parent","path","reverse","console","log","pathAsMap","reduce","res","row","MapElement","getPupUp","geography","content","numberOfThings","properties","openLegendDialog","legendSelectDialog","prepareLegendSelectData","prepareCountrySelectData","iso","fullData","worldAverage","selectType","i","countryCode","paletteScale","scaleLinear","domain","range","rawData","mapP","continent","valueSet","size","sum","c","drawMap","Datamaps","scope","element","document","getElementById","responsive","dataType","fills","defaultFill","done","datamap","svg","selectAll","on","countrySelectDialog","dataset","geographyConfig","borderDefault","borderWidth","defaultStrokeWidth","highlightBorderColor","highlightBorderWidth","highlightStrokeWidth","highlightFillColor","o","highlightOnHover","popupTemplate","attr","selectedArea","renderLegend","legendSet","legendContainer","legendWrapper","legendBlockSize","Tooltip_default","placement","legendBlock","onMouseOver","onLegendBlockMouseOver","onMouseOut","onLegendBlockMouseOut","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","removeChild","mapClass","React","createRef","window","addEventListener","updateChoropleth","prevProps","prevState","snapshot","ref","_legendContainer","_legendBlock","marginTop","up","borderTop","borderBottom","Map","renderSelect","valueSource","dataSource","onChange","displayName","FormControl_default","disabled","isAutoPlay","marginRight","Select_default","displayEmpty","event","disableUnderline","MenuItem_default","textAlign","menuItem","renderSlider","Slider_default","yearSelected","min","max","yearSet","step","thumb","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","processData","resource","onlyValues","Math","apply","Number","MAX_SAFE_INTEGER","fillColor","l","onSelectTypeChange","target","onSelectedAreaChange","togglePlay","isPlay","play","setTimeout","mapBoxHeight","removeEventListener","Card_default","AppBar_default","configBar","Toolbar_default","mapContainer","mapElement","_menuItem","_descriptionContent","fontSize","borderRadius","fonWeight","paddingTop","paddingBottom","Data","Default","titleWrapper","mainTitle","subTitle","_mainTitle","_subTitle","fontFamily","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","history","renderMap","js_map_map","navigateButton","Route","exact","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd2ce47e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    //fetchUrl: \"http://localhost:8080/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate '\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent '\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent '\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption '\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking '\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death '\r\n        }\r\n    },\r\n    mapProjection: {\r\n        world: {\r\n            key: 'world',\r\n            display: 'World',\r\n            projection: 'translate(0,0)scale(1)'\r\n        },\r\n        asia: {\r\n            key: 'asia',\r\n            display: 'Asia',\r\n            projection: 'translate(-700,-70)scale(1.85)',\r\n            countries: ['AFG','AZE','BHR','BGD','ARM','BTN','IOT','LKA','CHN','TWN','CXR','CCK','CYP','GEO','PSE','HKG','IND','IRN','IRQ','ISR','JPN','KAZ','JOR','PRK','KOR','KWT','KGZ','LBN','MAC','MDV','MNG','OMN','NPL','PAK','TLS','QAT','RUS','SAU','SYR','TJK','ARE','TUR','TKM','UZB','YEM']\r\n        },\r\n        OceaniaASEAN: {\r\n            key: 'OceaniaASEAN',\r\n            display: 'Oceania & ASEAN',\r\n            projection: 'translate(-1250,-350)scale(1.95)',\r\n            countries: ['THA','VNM','LAO' ,'SGP','PHL','MMR','KHM','MYS','IDN','BRN','ASM','AUS','SLB','COK','FJI','PYF','KIR','GUM','NRU','NCL','VUT','NZL','NIU','NFK','MNP','UMI','FSM','MHL','PLW','PNG','PCN','TKL','TON','TUV','WLF','WSM']\r\n        },\r\n        europe: {\r\n            key: 'europe',\r\n            display: 'Europe',\r\n            projection: 'translate(-850,0)scale(2.4)',\r\n            countries: ['ALB','AND','AZE','AUT','ARM','BEL','BIH','BGR','BLR','HRV','CYP','CZE','DNK','EST','FRO','FIN','ALA','FRA','GEO','DEU','GIB','GRC','VAT','HUN','ISL','IRL','ITA','KAZ','LVA','LIE','LTU','LUX','MLT','MCO','MDA','MNE','NLD','NOR','POL','PRT','ROU','RUS','SMR','SRB','SVK','SVN','ESP','SJM','SWE','CHE','TUR','UKR','MKD','GBR','GGY','JEY','IMN']\r\n        },\r\n        africa: {\r\n            key: 'africa',\r\n            display: 'Africa',\r\n            projection: 'translate(-650,-280)scale(2)',\r\n            countries: ['DZA','AGO','BWA','BDI','CMR','CPV','CAF','TCD','COM','MYT','COG','COD','BEN','GNQ','ETH','ERI','DJI','GAB','GMB','GHA','GIN','CIV','KEN','LSO','LBR','LBY','MDG','MWI','MLI','MRT','MUS','MAR','MOZ','NAM','NER','NGA','GNB','REU','RWA','SHN','STP','SEN','SYC','SLE','SOM','ZAF','ZWE','SSD','SDN','ESH','SWZ','TGO','TUN','UGA','EGY','TZA','BFA','ZMB']\r\n        },\r\n        northAmerica: {\r\n            key: 'northAmerica',\r\n            display: 'North America',\r\n            projection: 'translate(150,-60)scale(1.85)',\r\n            countries: ['ATG','BHS','BRB','BMU','BLZ','VGB','CAN','CYM','CRI','CUB','DMA','DOM','SLV','GRL','GRD','GLP','GTM','HTI','HND','JAM','MTQ','MEX','MSR','ANT','CUW','ABW','SXM','BES','NIC','UMI','PAN','PRI','BLM','KNA','AIA','LCA','MAF','SPM','VCT','TTO','TCA','USA','VIR']\r\n        },\r\n        southAmerica: {\r\n            key: 'southAmerica',\r\n            display: 'South America',\r\n            projection: 'translate(-100,-420)scale(1.98)',\r\n            countries: ['ARG','BOL','BRA','CHL','COL','ECU','FLK','GUF','GUY','PRY','PER','SUR','URY','VEN']\r\n        }\r\n    },\r\n    colors: {\r\n        world: {\r\n            dark: '#072F66',\r\n            main: \"#0B3D82\",\r\n            medium: '#3266AD',\r\n            light: '#5481BE',\r\n        },\r\n        country: {\r\n            dark: '#8F480D',\r\n            main: \"#B56726\",\r\n            medium: '#F5AE73',\r\n            light: '#FFCDA3',\r\n        },\r\n        highlight: {\r\n            dark: '#FCE20A',\r\n            main: \"#FFEA39\",\r\n            medium: '#FFF181',\r\n            light: '#FFF6AF',\r\n        }\r\n    }\r\n};\r\n\r\nexport default utilData;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass BaseDialog extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            isOpen: false,\r\n            clicked: false\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    handleClickOpen = (title) => {\r\n        this.setState({\r\n            title: title,\r\n            isOpen: true\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    render () {\r\n        return(\r\n            <Dialog open={this.state.isOpen} maxWidth = {'lg'} onClose={this.handleClose}>\r\n                <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\r\n                <DialogContent>\r\n                    {this.props.children}\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    dialog: {\r\n        maxHeight: 1000,\r\n        maxWidth: 1000\r\n    },\r\n    container: {}\r\n});\r\n\r\n\r\nBaseDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BaseDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport BaseDialog from \"../../component/baseDialog/baseDialog\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport utilData from \"../../common/utils\";\r\n\r\nclass CountrySelectDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            chart: null,\r\n            selectedType: null,\r\n            worldDataSet: {}\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.openDialog = this.openDialog.bind(this);\r\n        this.drawChart = this.drawChart.bind(this);\r\n        this.prepareLineChart = this.prepareLineChart.bind(this);\r\n        this.prepareOption = this.prepareOption.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        //\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    openDialog = (data, selectedType) => {\r\n        //prepare world dataset\r\n        let worldDataSet = {};\r\n        Object.keys(data.source.data).forEach((year) => {\r\n            worldDataSet[year] = data.source.data[year].map((d) => {return d[selectedType]}).sort((a, b) => b - a);\r\n        });\r\n\r\n        this.setState({\r\n            data: Object.values(data.selectedCountry).length !== 0 ? data : null,\r\n            selectedType: selectedType,\r\n            worldDataSet: worldDataSet\r\n        });\r\n\r\n        if (Object.values(data.selectedCountry).length !== 0) {\r\n            this.dialog.handleClickOpen(utilData.typePair[this.state.selectedType].display + \" in \" + Object.values(data.selectedCountry)[0].countryName);\r\n        } else {\r\n            alert(\"N/A\");\r\n        }\r\n    };\r\n\r\n    drawChart = () => {\r\n\r\n    };\r\n\r\n    prepareLineChart = () => {\r\n        let prepareLineChartData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.selectedCountry[year][this.state.selectedType]));\r\n            return d;\r\n        };\r\n        let prepareWorldData = () => {\r\n            let d = [];\r\n            data.labels.forEach((year) => d.push(this.state.data.world[year]));\r\n            return d;\r\n        };\r\n        let data = {};\r\n        data.labels = Object.keys(this.state.data.selectedCountry).sort();\r\n        data.datasets = [];\r\n        let selectDataset = {\r\n            label: this.state.data.selectedCountry[data.labels[0]].countryName,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.country.main,\r\n            borderColor: utilData.colors.country.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.country.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.country.main,\r\n            pointHoverBorderColor: utilData.colors.country.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareLineChartData()\r\n        };\r\n        let worldDataset = {\r\n            label: \"World\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: utilData.colors.world.main,\r\n            borderColor: utilData.colors.world.medium,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: utilData.colors.world.light,\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: utilData.colors.world.main,\r\n            pointHoverBorderColor: utilData.colors.world.medium,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: prepareWorldData()\r\n        };\r\n\r\n        data.datasets.push(selectDataset, worldDataset);\r\n        return data;\r\n    };\r\n\r\n    prepareOption = () => {\r\n        return {\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                mode: 'label',\r\n                position: 'nearest',\r\n                callbacks: {\r\n                    label: (tooltipItem, data) => {\r\n                        let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n                        return (\" \" + label + ':  ' + (tooltipItem.yLabel+\"\").substring(0, 5) + this.state.data.separator);\r\n                    },\r\n                    afterBody: (tooltipItems, data) => {\r\n                        return '\\n' + data.datasets[0].label + \"is ranked NO.\" + (this.state.worldDataSet[tooltipItems[0].xLabel].indexOf(tooltipItems[0].yLabel) + 1) + \" in the World\";\r\n                    }\r\n                },\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        padding: 10,\r\n                        callback: (value, index) => {\r\n                            return value + this.state.data.separator;\r\n                        }\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: this.state.data.yLabel\r\n                    },\r\n                }],\r\n                xAxes: [{\r\n                    ticks: {\r\n                        padding: 10\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Year'\r\n                    },\r\n                }]\r\n            },\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.data != null) {\r\n            return (\r\n                <BaseDialog onRef={instance => {\r\n                    this.dialog = instance;\r\n                }}>\r\n                    <div className={this.styles.container}>\r\n                        <Line width={600} height={350} options={this.prepareOption()} data={this.prepareLineChart()}/>\r\n                    </div>\r\n                </BaseDialog>\r\n            )\r\n        } else {\r\n            return (\r\n                <div/>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column'\r\n    }\r\n});\r\n\r\n\r\nCountrySelectDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CountrySelectDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport BaseDialog from \"../../component/baseDialog/baseDialog\";\r\nimport {Sunburst, LabelSeries } from 'react-vis';\r\n\r\nimport utilData from \"../../common/utils\";\r\n\r\nclass LegendSelectDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedType: null,\r\n            data: null,\r\n            chart: null,\r\n            label: null\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.openDialog = this.openDialog.bind(this);\r\n        this.renderChart = this.renderChart.bind(this);\r\n        this.handleMouseOver = this.handleMouseOver.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.updateData = this.updateData.bind(this);\r\n        this.getKeyPath = this.getKeyPath.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(null);\r\n    }\r\n\r\n    openDialog = (data) => {\r\n        this.setState({\r\n            selectedType: utilData.typePair[data.name],\r\n            data: data,\r\n            chart: data.chart\r\n        });\r\n\r\n        this.dialog.handleClickOpen(utilData.typePair[data.name].display + \" for countries within the range of \" + data.legend.display);\r\n    };\r\n\r\n    renderChart = () => {\r\n        if (this.state.data !== null) {\r\n            return (\r\n                <Sunburst\r\n                    data={this.state.chart}\r\n                    animation\r\n                    height={400}\r\n                    width={600}\r\n                    style={{\r\n                        stroke: '#ddd',\r\n                        strokeOpacity: 0.3,\r\n                        strokeWidth: '0.5'\r\n                    }}\r\n                    hideRootNode\r\n                    colorType=\"literal\"\r\n                    onValueMouseOver={node => this.handleMouseOver(node)}\r\n                    onValueMouseOut={node => this.handleMouseOut(node)}\r\n                >\r\n                    {this.state.label && (\r\n                        <LabelSeries\r\n                            data={[{x: 0, y: 0, label: this.state.label}]}\r\n                        />\r\n                    )}\r\n                </Sunburst>\r\n            )\r\n        } else {\r\n            return <div/>\r\n        }\r\n    };\r\n\r\n    updateData = (chart, keyPath) => {\r\n        if (chart.children) {\r\n            chart.children.map(child => this.updateData(child, keyPath));\r\n        }\r\n        chart.style = {\r\n            fillOpacity: (keyPath && !keyPath[chart.name]) ? 0.2 : 1\r\n        };\r\n        return chart;\r\n    };\r\n\r\n    getKeyPath = (node) => {\r\n        if (!node.parent) {\r\n            return ['root'];\r\n        }\r\n\r\n        return [(node.data && node.data.name) || node.name].concat(\r\n            this.getKeyPath(node.parent)\r\n        );\r\n    };\r\n\r\n    handleMouseOver = (node) => {\r\n        const path = this.getKeyPath(node).reverse();\r\n        console.log(path)\r\n        const pathAsMap = path.reduce((res, row) => {\r\n            res[row] = true;\r\n            return res;\r\n        }, {});\r\n        this.setState({\r\n            label: path.length === 2 ? 'continent' : 'country',\r\n            chart: this.updateData(this.state.chart, pathAsMap)\r\n        });\r\n    };\r\n\r\n    handleMouseOut = (node) => {\r\n        this.setState({\r\n            label : null,\r\n            chart: this.updateData(this.state.data.chart, false)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <BaseDialog onRef={instance => {\r\n                this.dialog = instance;\r\n            }}>\r\n                <div className={this.styles.container}>\r\n                    {this.renderChart()}\r\n                </div>\r\n            </BaseDialog>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: 'column'\r\n    }\r\n});\r\n\r\n\r\nLegendSelectDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LegendSelectDialog);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport utilData from \"../../common/utils\";\r\nimport CountrySelectDialog from \"../countrySelectDialog/countrySelectDialog\";\r\nimport LegendSelectDialog from \"../legendSelectDialog/legendSelectDialog\";\r\nimport {scaleLinear} from \"d3-scale\";\r\n\r\nclass MapElement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null,\r\n            legendBlockSize: 7,\r\n            borderDefault: '#DEDEDE',\r\n            highlightBorderColor: utilData.colors.highlight.dark,\r\n            highlightStrokeWidth: 1,\r\n            defaultStrokeWidth: 0.45,\r\n            selectedArea: utilData.mapProjection[0],\r\n            selectedType: \"prevalenceInPercent\"\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n        this.styles = this.props.classes;\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n        this.renderLegend = this.renderLegend.bind(this);\r\n        this.onLegendBlockMouseOver = this.onLegendBlockMouseOver.bind(this);\r\n        this.onLegendBlockMouseOut = this.onLegendBlockMouseOut.bind(this);\r\n        this.prepareCountrySelectData = this.prepareCountrySelectData.bind(this);\r\n        this.prepareLegendSelectData = this.prepareLegendSelectData.bind(this);\r\n        this.openLegendDialog = this.openLegendDialog.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener(\"resize\", () => {\r\n        });\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n            selectedArea: this.props.selectedArea,\r\n            selectedType: this.props.selectedType\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let map = this.state.map;\r\n\r\n        if (nextProps.data !== this.state.data) {\r\n            map.updateChoropleth(nextProps.data.dataset);\r\n        }\r\n\r\n        if (nextProps.selectedArea !== this.state.selectedArea) {\r\n            map.svg.selectAll(\"g\").attr(\"transform\", nextProps.selectedArea.projection);\r\n        }\r\n\r\n        this.setState({\r\n            data: nextProps.data,\r\n            map: map,\r\n            mapClass: nextProps.mapClass,\r\n            selectedArea: nextProps.selectedArea,\r\n            selectedType: nextProps.selectedType\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data === null ? 'No Data Available' : data.numberOfThings;\r\n        return (\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n            '<span>' + geography.properties.name + '</span>' +\r\n            '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n        )\r\n    };\r\n\r\n    openLegendDialog = (legend) => {\r\n        this.legendSelectDialog.openDialog(this.prepareLegendSelectData(legend));\r\n    };\r\n\r\n    prepareCountrySelectData = (iso) => {\r\n        let source = this.state.data.fullData;\r\n        let data = {\r\n            selectedCountry: {},\r\n            world: source.worldAverage,\r\n            source: source,\r\n            separator: this.state.data.separator,\r\n            selectType: this.state.selectedType\r\n        };\r\n        let label = utilData.typePair[this.state.selectedType].description;\r\n        data.yLabel = (this.state.data.separator.length === 0 ? label : label + \" in \" + this.state.data.separator);\r\n\r\n        Object.keys(source.data).forEach((year) => {\r\n            for (let i = 0; i < source.data[year].length; i++) {\r\n                if (source.data[year][i].countryCode === iso) {\r\n                    data.selectedCountry[year] = source.data[year][i];\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    };\r\n\r\n    prepareLegendSelectData = (legend) => {\r\n        let paletteScale = scaleLinear().domain([legend.value[0], legend.value[1]]).range([\"#EFEFFF\", utilData.colors.world.dark]);\r\n        let data = {name: this.state.selectedType, rawData: this.state.data, legend: legend};\r\n        let chart = {name: legend.display, color: utilData.colors.world.dark, children: []};\r\n        Object.keys(utilData.mapProjection).forEach((key) => {\r\n            let mapP = utilData.mapProjection[key];\r\n            if (mapP.key !== \"world\") {\r\n                let continent = {name: mapP.display, color: utilData.colors.world.medium, children: []};\r\n                legend.valueSet.forEach((iso) => {\r\n                    let country = this.state.data.rawData[iso];\r\n                    if (mapP.countries.indexOf(iso) >= 0) {\r\n                        continent.children.push({\r\n                            name: country.countryName,\r\n                            color: paletteScale(country[this.state.selectedType]),\r\n                            size: country[this.state.selectedType]\r\n                        });\r\n                    }\r\n                });\r\n                if (continent.children.length > 0) {\r\n                    let sum = 0;\r\n                    continent.children.forEach((c) => {sum += c.size});\r\n                    let paletteScale = scaleLinear().domain([legend.value[0], legend.value[1]]).range([\"#EFEFFF\", utilData.colors.country.dark]);\r\n                    continent.color = paletteScale(sum/continent.children.length);\r\n                    chart.children.push(continent);\r\n                }\r\n            }\r\n        });\r\n        if (chart.children.length > 0) data.chart = chart;\r\n        return data;\r\n    };\r\n\r\n    drawMap = () => {\r\n        //USA\r\n        let map = new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"mapContainer\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            done: (datamap) => {\r\n                datamap.svg.selectAll('.datamaps-subunit').on('click', (geography) => {\r\n                    //console.log((this.prepareCountrySelectData(geography.properties.iso)));\r\n                    this.countrySelectDialog.openDialog(this.prepareCountrySelectData(geography.properties.iso), this.state.selectedType);\r\n                });\r\n            },\r\n            data: this.state.data.dataset,\r\n            geographyConfig: {\r\n                borderColor: this.state.borderDefault,\r\n                borderWidth: this.state.defaultStrokeWidth,\r\n                highlightBorderColor: this.state.highlightBorderColor,\r\n                highlightBorderWidth: this.state.highlightStrokeWidth,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n\r\n        map.svg.selectAll(\"g\").attr(\"transform\", this.state.selectedArea.projection);\r\n        return map;\r\n    };\r\n\r\n    renderLegend = () => {\r\n        if (this.state.data.legendSet) {\r\n            return (\r\n                <div className={this.styles.legendContainer}>\r\n                    <div className={this.styles.legendWrapper}\r\n                         style={{\r\n                             width: this.state.data.legendSet.length * this.state.legendBlockSize + \"vw\",\r\n                             minWidth: 38 * this.state.data.legendSet.length + \"px\"\r\n                         }}>\r\n                        {this.state.data.legendSet.map((legend) => (\r\n                            <Tooltip title={legend.display} placement={\"top\"} key={legend.display}>\r\n                                <div className={this.styles.legendBlock}\r\n                                     style={{backgroundColor: legend.color, width: this.state.legendBlockSize + \"vw\"}}\r\n                                     onMouseOver={() => this.onLegendBlockMouseOver(legend.valueSet)}\r\n                                     onMouseOut={() => this.onLegendBlockMouseOut()}\r\n                                     onClick={() => this.openLegendDialog(legend)}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {\r\n            map.removeChild(child);\r\n        }\r\n    };\r\n\r\n    onLegendBlockMouseOver = (values) => {\r\n        values.forEach((iso) => {\r\n            this.state.map.svg\r\n                .selectAll('.' + iso)\r\n                .transition()\r\n                .style('stroke-width', this.state.highlightStrokeWidth)\r\n                .style('stroke', this.state.highlightBorderColor);\r\n        });\r\n    };\r\n\r\n    onLegendBlockMouseOut = () => {\r\n        this.state.map.svg\r\n            .selectAll('.datamaps-subunit')\r\n            .transition()\r\n            .style('stroke', this.state.borderDefault);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"mapContainer\" style={this.state.mapClass} ref={this.mapRef}/>\r\n                {this.renderLegend()}\r\n                <CountrySelectDialog onRef={instance => {\r\n                    this.countrySelectDialog = instance;\r\n                }}/>\r\n                <LegendSelectDialog onRef={instance => {\r\n                    this.legendSelectDialog = instance;\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    selectedArea: PropTypes.object.isRequired,\r\n    selectedType: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n    legendContainer: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '-5px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '-10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: '-17px',\r\n        },\r\n    },\r\n    legendWrapper: {\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    legendBlock: {\r\n        borderTop: '2px solid #ffffff',\r\n        borderBottom: '2px solid #ffffff',\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        minWidth: '38px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '4px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '12px'\r\n        },\r\n        '&:hover': {\r\n            borderTop: '2px solid ' + utilData.colors.highlight.dark,\r\n            borderBottom: '2px solid ' + utilData.colors.highlight.dark,\r\n        },\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MapElement);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72,\r\n            selectedArea: utilData.mapProjection['world'].key\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSelect = this.renderSelect.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.onSelectedAreaChange = this.onSelectedAreaChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelect = (name, valueSource, dataSource, onChange, displayName) => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay} style={{marginRight: '15px'}}>\r\n                <Select name={name} displayEmpty value={this.state[valueSource]} onChange={(event) => onChange(event)} disableUnderline={true}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        {displayName}\r\n                    </MenuItem>\r\n                    {Object.keys(dataSource).map((key) => {\r\n                        return (\r\n                            <MenuItem value={dataSource[key].key} key={dataSource[key].key} style={{textAlign: 'center'}}>\r\n                                <span className={this.styles.menuItem}>{dataSource[key].display}</span>\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length-1} step={1}\r\n                    onChange={(event, value)=>{this.setState({yearSelected:value})}}\r\n                    thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens style={{ color: utilData.colors.world.medium }} /></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + \"in \" + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({mapClass: this.prepareMapClass()});\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height =  document.documentElement.clientHeight * 0.65;\r\n        let width = height*11/5;\r\n        if (width >= document.documentElement.clientWidth){\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width/11*5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height+\"px\",\r\n            width: width+\"px\",\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let resource = {};\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n        let legend = this.state.data[\"typeYearDataSet\"][key][\"legend\"];\r\n\r\n        let rawData = {};\r\n        let dataset = {};\r\n\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let paletteScale = scaleLinear()\r\n            .domain([0, legend != null ? legend[legend.length - 1] : Math.max.apply(null, onlyValues)])\r\n            .range([\"#EFEFFF\",utilData.colors.world.dark]);\r\n\r\n        //prepare legend\r\n        let separator = this.state.data[\"typeYearDataSet\"][key][\"legendSeparator\"];\r\n        let legendSet = [];\r\n        if (legend){\r\n            for (let i = 0; i < legend.length - 1; i++){\r\n                legendSet.push({\r\n                    display: legend[i] + separator + \" - \" + legend[i + 1] + separator,\r\n                    color: paletteScale(legend[i]),\r\n                    value: [legend[i], legend[i + 1]],\r\n                    valueSet: []\r\n                })\r\n            }\r\n            legendSet.push({\r\n                display: \"> \" + legend[legend.length-1] + separator,\r\n                color: paletteScale(legend[legend.length-1]),\r\n                value: [legend[legend.length-1], Number.MAX_SAFE_INTEGER],\r\n                valueSet: []\r\n            })\r\n        }\r\n\r\n        //prepare data\r\n        data.forEach((o) => {//\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value)};\r\n            for(let i = 0; i < legendSet.length; i++){\r\n                let l = legendSet[i];\r\n                if (l.value[0] <= value && l.value[1] > value) {\r\n                    l.valueSet.push(iso);\r\n                }\r\n                legendSet[i] = l;\r\n            }\r\n            rawData[iso] = o;\r\n        });\r\n\r\n        resource.dataset = dataset;\r\n        resource.legendSet = legendSet;\r\n        resource.fullData = {};\r\n        resource.fullData.data = this.state.data[\"typeYearDataSet\"][key][\"data\"];\r\n        resource.fullData.worldAverage = this.state.data[\"typeYearDataSet\"][key][\"average\"];\r\n        resource.separator = separator;\r\n        resource.rawData = rawData;\r\n\r\n        return resource;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    onSelectedAreaChange = (event) => {\r\n        this.setState({\r\n            selectedArea: event.target.value\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay){\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        }else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height:'6vh'}}>\r\n                            {this.renderSelect(\"type\", \"selectedType\", utilData.typePair, this.onSelectTypeChange, \"Types\")}\r\n                            {this.renderSelect(\"area\", \"selectedArea\", utilData.mapProjection, this.onSelectedAreaChange, \"Areas\")}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()} selectedArea={utilData.mapProjection[this.state.selectedArea]} selectedType={this.state.selectedType}/>\r\n                    </div>\r\n                </Card>\r\n                <div style={{width: '100vw', height: '6vh'}}>\r\n                    <div className={\"bottom\"}>\r\n                        <div style={{width: '3vw', minWidth:'25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={()=>this.togglePlay(false)}/> : <PlayArrow onClick={()=>this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '35px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        height: '65vh',\r\n        paddingTop: '4.5vh',\r\n        paddingBottom: '2.5vh'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Data extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Data\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nData.propTypes = {\r\n\r\n};\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.styles.container}>\r\n                <div className={this.styles.titleWrapper}>\r\n                    <span className={this.styles.mainTitle}>Smoke Till My Last Breath</span>\r\n                </div>\r\n                <div className={this.styles.titleWrapper} style={{marginTop: '22px'}}>\r\n                    <span className={this.styles.subTitle}>Is So Good</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: '100vw',\r\n        marginTop: '100px'\r\n    },\r\n    titleWrapper:{\r\n        textAlign: 'center',\r\n        color: 'black',\r\n        fontFamily: 'Verdana, Geneva, sans-serif'\r\n    },\r\n    mainTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '24px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '40px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '55px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    subTitle: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '14px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '20px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    }\r\n});\r\n\r\nDefault.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Default);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n    componentDidMount(){\n        document.title = \"Chainsmokers\";\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Home/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}