{"version":3,"sources":["js/component/navigateButton/navigateButton.js","js/map/mapElement/mapElement.js","js/common/utils.js","js/map/map.js","js/data/data.js","js/default/default.js","js/home/home.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","_image","root","display","minWidth","width","height","minHeight","margin","padding","image","position","Object","defineProperty","breakpoints","down","zIndex","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","concat","spacing","unit","imageMarked","props","classes","images","react_default","a","createElement","className","map","ButtonBase_default","focusRipple","key","title","focusVisibleClassName","style","onClick","func","backgroundImage","url","Typography_default","component","MapElement","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPupUp","geography","data","content","numberOfThings","properties","name","drawMap","Datamaps","scope","element","document","getElementById","projection","responsive","dataType","fills","defaultFill","state","dataset","geographyConfig","borderColor","borderDefault","borderWidth","defaultStrokeWidth","highlightBorderColor","highlightBorderWidth","highlightStrokeWidth","highlightFillColor","o","highlightOnHover","popupTemplate","renderLegend","legendSet","styles","legendContainer","legendWrapper","length","legendBlockSize","legend","Tooltip_default","placement","legendBlock","onMouseOver","onLegendBlockMouseOver","valueSet","onMouseOut","onLegendBlockMouseOut","clearMap","mapRef","current","_arr","Array","from","childNodes","_i","child","removeChild","values","forEach","iso","svg","selectAll","mapClass","React","createRef","bind","assertThisInitialized","window","addEventListener","setState","nextProps","updateChoropleth","prevProps","prevState","snapshot","id","ref","Component","_legendContainer","_legendBlock","marginTop","up","flexDirection","utilData","fetchUrl","allData","typePair","prevalenceInPercent","description","maleInPercent","femaleInPercent","dailyConsumption","death","cancerDeathInPercent","Map","renderSelectType","FormControl_default","disabled","isAutoPlay","Select_default","displayEmpty","value","selectedType","onChange","event","onSelectTypeChange","MenuItem_default","keys","menuItem","renderSlider","Slider_default","yearSelected","min","max","yearSet","step","thumb","index_es","renderDescription","descriptionContent","mapResize","prepareMapClass","documentElement","clientHeight","clientWidth","marginLeft","marginRight","processData","resource","onlyValues","paletteScale","scaleLinear","domain","Math","apply","range","separator","i","push","Number","MAX_SAFE_INTEGER","countryCode","fillColor","l","target","togglePlay","isPlay","play","year","setTimeout","mapBoxHeight","removeEventListener","_this2","Card_default","AppBar_default","configBar","Toolbar_default","mapContainer","mapElement","_menuItem","_descriptionContent","_mapContainer","fontSize","borderRadius","fonWeight","Data","Default","Home","getNavigationBar","onMapShow","onDataShow","getCountryYear","fetch","method","headers","Content-Type","then","response","json","catch","e","console","log","history","renderMap","map_map","navigateButton","Route","exact","path","withRouter","App","BrowserRouter","home_home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcb5ccce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'block',\r\n        minWidth: '160px;',\r\n        width: '90%',\r\n        height: '8.5vh',\r\n        minHeight: '60px',\r\n        margin: 'auto',\r\n        padding: 'auto'\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing.unit * 0.75}px ${theme.spacing.unit * 6}px ${theme.spacing.unit + 0.75}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n});\r\n\r\nfunction NavigationButton(props) {\r\n    const { classes, images } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                        height: '8.5vh',\r\n                        minHeight: '40px'\r\n                    }}\r\n                    onClick={image.func}\r\n                >\r\n                    <span className={classes.imageSrc} style={{backgroundImage: `url(${image.url})`,}}/>\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography component=\"span\" color=\"inherit\" className={classes.imageTitle}>\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nNavigationButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigationButton);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Datamaps from \"datamaps/dist/datamaps.world.hires.min\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass MapElement extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            map: null,\r\n            data: null,\r\n            legendBlockSize: 7,\r\n            borderDefault: '#DEDEDE',\r\n            highlightBorderColor: '#FFFF00',\r\n            highlightStrokeWidth: 1,\r\n            defaultStrokeWidth: 0.45\r\n        };\r\n\r\n        this.mapRef = React.createRef();\r\n        this.styles = this.props.classes;\r\n\r\n        this.drawMap = this.drawMap.bind(this);\r\n        this.clearMap = this.clearMap.bind(this);\r\n        this.getPupUp = this.getPupUp.bind(this);\r\n        this.renderLegend = this.renderLegend.bind(this);\r\n        this.onLegendBlockMouseOver = this.onLegendBlockMouseOver.bind(this);\r\n        this.onLegendBlockMouseOut = this.onLegendBlockMouseOut.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        window.addEventListener(\"resize\", ()=>{});\r\n        this.setState({\r\n            mapClass: this.props.mapClass,\r\n            data: this.props.data,\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            map: this.drawMap()\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.data !== this.state.data) {\r\n            let map = this.state.map;\r\n            map.updateChoropleth(nextProps.data.dataset);\r\n            this.setState({\r\n                data: nextProps.data,\r\n                map: map,\r\n                mapClass: nextProps.mapClass\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //responsive map\r\n        if (this.state.mapClass !== prevState.mapClass) {\r\n            this.clearMap();\r\n            this.setState({map: this.drawMap()});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearMap();\r\n    }\r\n\r\n    getPupUp = (geography, data) => {\r\n        let content = data === null ? 'No Data Available' : data.numberOfThings;\r\n        return(\r\n            '<div class=\"hoverinfo\" style=\"display: flex; flex-direction: column\">' +\r\n                '<span>' + geography.properties.name + '</span>' +\r\n                '<span style=\"margin-top: 5px;\">' + content + '</span>' +\r\n            '</div>'\r\n            )\r\n    };\r\n\r\n    drawMap = () => {\r\n        //USA\r\n        return new Datamaps({\r\n            scope: 'world',\r\n            element: document.getElementById(\"mapContainer\"),\r\n            projection: 'equirectangular',\r\n            responsive: false,\r\n            dataType: 'json',\r\n            fills: {\r\n                defaultFill: '#ddd'\r\n            },\r\n            data: this.state.data.dataset,\r\n            geographyConfig: {\r\n                borderColor: this.state.borderDefault,\r\n                borderWidth: this.state.defaultStrokeWidth,\r\n                highlightBorderColor: this.state.highlightBorderColor,\r\n                highlightBorderWidth: this.state.highlightStrokeWidth,\r\n                highlightFillColor: (o) => {\r\n                    return o['fillColor'] || '#ddd';\r\n                },\r\n                highlightOnHover: true,\r\n                popupTemplate: (geography, data) => this.getPupUp(geography, data)\r\n            }\r\n        });\r\n    };\r\n\r\n    renderLegend = () => {\r\n        if (this.state.data.legendSet){\r\n            return(\r\n                <div className={this.styles.legendContainer}>\r\n                    <div className={this.styles.legendWrapper}\r\n                         style={{width: this.state.data.legendSet.length*this.state.legendBlockSize + \"vw\", minWidth: 38*this.state.data.legendSet.length+\"px\"}}>\r\n                        {this.state.data.legendSet.map((legend) => (\r\n                            <Tooltip title={legend.display} placement={\"top\"}>\r\n                                <div className={this.styles.legendBlock} style={{backgroundColor: legend.color, width: this.state.legendBlockSize + \"vw\"}}\r\n                                     onMouseOver={() => this.onLegendBlockMouseOver(legend.valueSet)} onMouseOut={() => this.onLegendBlockMouseOut()}/>\r\n                            </Tooltip>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    clearMap = () => {\r\n        const map = this.mapRef.current;\r\n        for (const child of Array.from(map.childNodes)) {map.removeChild(child);}\r\n    };\r\n\r\n    onLegendBlockMouseOver = (values) => {\r\n        values.forEach((iso) => {\r\n            this.state.map.svg\r\n                .selectAll('.' + iso)\r\n                .transition()\r\n                .style('stroke-width', this.state.highlightStrokeWidth)\r\n                .style('stroke', this.state.highlightBorderColor);\r\n        });\r\n    };\r\n\r\n    onLegendBlockMouseOut = () => {\r\n        this.state.map.svg\r\n            .selectAll('.datamaps-subunit')\r\n            .transition()\r\n            .style('stroke', this.state.borderDefault);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"mapContainer\" style={this.state.mapClass} ref={this.mapRef} />\r\n                {this.renderLegend()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMapElement.propTypes = {\r\n    mapClass: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    legendContainer: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '-10px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: '-20px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: '-35px',\r\n        },\r\n    },\r\n    legendWrapper: {\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    legendBlock: {\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        minWidth: '38px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '4px',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '12px'\r\n        }\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(MapElement);\r\n","const utilData= {\r\n    fetchUrl: \"http://www.callmedady.com:8080/vab/bootstrap/getAll\",\r\n    //fetchUrl: \"http://localhost:8080/bootstrap/getAll\",\r\n    allData: null,\r\n    typePair: {\r\n        prevalenceInPercent : {\r\n            display: \"Prevalence\",\r\n            key: 'prevalenceInPercent',\r\n            description: 'Prevalence Rate in '\r\n        },\r\n        maleInPercent : {\r\n            display: \"Male Smoker\",\r\n            key: 'maleInPercent',\r\n            description: 'Male adult smoking percent in '\r\n        },\r\n        femaleInPercent : {\r\n            display: \"Female Smoker\",\r\n            key: 'femaleInPercent',\r\n            description: 'Female adult smoking percent in '\r\n        },\r\n        dailyConsumption : {\r\n            display: \"Daily Tobacco Consumption\",\r\n            key: 'dailyConsumption',\r\n            description: 'Average daily consumption in '\r\n        },\r\n        death: {\r\n            display: 'Death due to smoke',\r\n            key: 'death',\r\n            description: 'Death due to smoking in '\r\n        },\r\n        cancerDeathInPercent: {\r\n            display: 'Cancer contribution',\r\n            key: 'cancerDeathInPercent',\r\n            description: 'Cancer contribution to smoking Death in '\r\n        }\r\n    }\r\n};\r\n\r\nexport default utilData;\r\n\r\n// sudo cp -a . /var/www/\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport {PlayArrow, Pause, Lens} from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MapElement from \"./mapElement/mapElement\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport './map.css';\r\n\r\nclass Map extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClass: null,\r\n            data: null,\r\n            selectedType: \"prevalenceInPercent\",\r\n            yearSet: [],\r\n            yearSelected: 0,\r\n            isAutoPlay: false,\r\n            mapBoxHeight: 72\r\n        };\r\n\r\n        this.styles = this.props.classes;\r\n\r\n        this.prepareMapClass = this.prepareMapClass.bind(this);\r\n        this.processData = this.processData.bind(this);\r\n        this.renderSelectType = this.renderSelectType.bind(this);\r\n        this.renderDescription = this.renderDescription.bind(this);\r\n        this.renderSlider = this.renderSlider.bind(this);\r\n        this.onSelectTypeChange = this.onSelectTypeChange.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.mapResize = this.mapResize.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            mapClass: this.prepareMapClass(),\r\n            data: this.props.data,\r\n            yearSet: this.props.data[\"typeYearDataSet\"][this.state.selectedType][\"years\"],\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.mapResize);\r\n    }\r\n\r\n    renderSelectType = () => {\r\n        return (\r\n            <FormControl disabled={this.state.isAutoPlay}>\r\n                <Select name=\"type\" displayEmpty value={this.state.selectedType} onChange={(event) => this.onSelectTypeChange(event)}>\r\n                    <MenuItem value=\"\" disabled key={\"\"}>\r\n                        Types\r\n                    </MenuItem>\r\n                    {Object.keys(utilData.typePair).map((key) => {\r\n                            return (\r\n                                <MenuItem value={utilData.typePair[key].key} key={utilData.typePair[key].key}>\r\n                                    <span className={this.styles.menuItem}>{utilData.typePair[key].display}</span>\r\n                                </MenuItem>\r\n                            )\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    };\r\n\r\n    renderSlider = () => {\r\n        return (\r\n            <div className={\"timeBar\"}>\r\n                <Slider className={\"slider\"} value={this.state.yearSelected} min={0} max={this.state.yearSet.length-1} step={1}\r\n                    onChange={(event, value)=>{this.setState({yearSelected:value})}}\r\n                    thumb={<Tooltip title={this.state.yearSet[this.state.yearSelected]}><Lens style={{ color: '#2196f3' }} /></Tooltip>}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        return (\r\n            <div className={'description'}>\r\n                <span className={this.styles.descriptionContent}>\r\n                    {utilData.typePair[this.state.selectedType].description + this.state.yearSet[this.state.yearSelected]}\r\n                 </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    mapResize = () => {\r\n        this.setState({mapClass: this.prepareMapClass()});\r\n    };\r\n\r\n    prepareMapClass = () => {\r\n        let height =  document.documentElement.clientHeight * 0.72;\r\n        let width = height/5*9;\r\n        if (width >= document.documentElement.clientWidth){\r\n            width = document.documentElement.clientWidth - 20;\r\n            height = width/9*5;\r\n        }\r\n        return {\r\n            position: 'relative',\r\n            marginLeft: \"auto\",\r\n            marginRight: 'auto',\r\n            height: height+\"px\",\r\n            width: width+\"px\"\r\n        }\r\n    };\r\n\r\n    processData = () => {\r\n        let resource = {};\r\n        let key = utilData.typePair[this.state.selectedType][\"key\"];\r\n        let data = this.state.data[\"typeYearDataSet\"][key][\"data\"][this.state.yearSet[this.state.yearSelected]];\r\n        let legend = this.state.data[\"typeYearDataSet\"][key][\"legend\"];\r\n\r\n        let dataset = {};\r\n\r\n        let onlyValues = data.map((o) => {\r\n            return o[key];\r\n        });\r\n\r\n        //calculate color\r\n        let paletteScale = scaleLinear()\r\n            .domain([0, legend != null ? legend[legend.length - 1] : Math.max.apply(null, onlyValues)])\r\n            .range([\"#EFEFFF\",\"#02386F\"]);\r\n\r\n        //prepare legend\r\n        let separator = this.state.data[\"typeYearDataSet\"][key][\"legendSeparator\"];\r\n        let legendSet = [];\r\n        if (legend){\r\n            for (let i = 0; i < legend.length - 1; i++){\r\n                legendSet.push({\r\n                    display: legend[i] + separator + \" - \" + legend[i + 1] + separator,\r\n                    color: paletteScale(legend[i]),\r\n                    value: [legend[i], legend[i + 1]],\r\n                    valueSet: []\r\n                })\r\n            }\r\n            legendSet.push({\r\n                display: \"> \" + legend[legend.length-1] + separator,\r\n                color: paletteScale(legend[legend.length-1]),\r\n                value: [legend[legend.length-1], Number.MAX_SAFE_INTEGER],\r\n                valueSet: []\r\n            })\r\n        }\r\n\r\n        //prepare data\r\n        data.forEach((o) => { //\r\n            let iso = o.countryCode, value = o[key];\r\n            dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value) };\r\n            for(let i = 0; i < legendSet.length; i++){\r\n                let l = legendSet[i];\r\n                if (l.value[0] <= value && l.value[1] > value) {\r\n                    l.valueSet.push(iso);\r\n                }\r\n                legendSet[i] = l;\r\n            }\r\n        });\r\n\r\n        resource.dataset = dataset;\r\n        resource.legendSet = legendSet;\r\n\r\n        return resource;\r\n    };\r\n\r\n    onSelectTypeChange = (event) => {\r\n        this.setState({\r\n            selectedType: event.target.value,\r\n            yearSet: this.state.data[\"typeYearDataSet\"][event.target.value][\"years\"],\r\n            yearSelected: 0\r\n        })\r\n    };\r\n\r\n    togglePlay = (isPlay) => {\r\n        this.setState({isAutoPlay: isPlay});\r\n        if (isPlay) this.play(isPlay);\r\n    };\r\n\r\n    play = (isPlay) => {\r\n        if (isPlay || this.state.isAutoPlay){\r\n            let year = this.state.yearSelected + 1;\r\n            this.setState({\r\n                yearSelected: year,\r\n                isAutoPlay: year !== this.state.yearSet.length - 1\r\n            });\r\n            setTimeout(() => {\r\n                this.play()\r\n            }, 200);\r\n        }else if (this.state.yearSelected === this.state.yearSet.length - 1) {\r\n            this.setState({yearSelected: 0})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"map-base\"}>\r\n                <Card>\r\n                    <AppBar position=\"static\" className={this.styles.configBar}>\r\n                        <Toolbar style={{minHeight: '35px', height:'6vh'}}>\r\n                            {this.renderSelectType()}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {this.renderDescription()}\r\n                    <div className={this.styles.mapContainer}>\r\n                        <MapElement mapClass={this.state.mapClass} data={this.processData()}/>\r\n                    </div>\r\n                </Card>\r\n                <div style={{width: '100vw', height: '6vh'}}>\r\n                    <div className={\"bottom\"}>\r\n                        <div style={{width: '3vw', minWidth:'25px'}}>\r\n                            {this.state.isAutoPlay ? <Pause onClick={()=>this.togglePlay(false)}/> : <PlayArrow onClick={()=>this.togglePlay(true)}/>}\r\n                        </div>\r\n                        {this.renderSlider()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n    menuItem: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '12px !important',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            fontSize: '17px !important',\r\n        }\r\n    },\r\n    configBar: {\r\n        borderRadius: 0,\r\n        height: '6vh',\r\n        minHeight: '35px',\r\n        backgroundColor: '#ffffff'\r\n    },\r\n    descriptionContent: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '17px !important',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '24px !important',\r\n            fonWeight: 'bold',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '33px !important',\r\n            fonWeight: 'bold',\r\n        }\r\n    },\r\n    mapContainer: {\r\n        width: '100vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '60vh'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '72vh'\r\n        }\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Data extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Data\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nData.propTypes = {\r\n\r\n};\r\n\r\nexport default Data;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Default extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Default\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDefault.propTypes = {\r\n\r\n};\r\n\r\nexport default Default;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\nimport NavigationButton from \"../component/navigateButton/navigateButton\";\r\nimport Map from \"../map/map\";\r\nimport Data from \"../data/data\";\r\nimport Default from \"../default/default\";\r\n\r\nimport utilData from \"../common/utils\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            history: null\r\n        };\r\n\r\n        this.getNavigationBar = this.getNavigationBar.bind(this);\r\n        this.onMapShow = this.onMapShow.bind(this);\r\n        this.onDataShow = this.onDataShow.bind(this);\r\n        this.renderMap = this.renderMap.bind(this);\r\n        this.getCountryYear = this.getCountryYear.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            history: this.props.history\r\n        });\r\n        this.getCountryYear();\r\n    }\r\n\r\n    getNavigationBar = ()=>{\r\n        return [\r\n            {\r\n                url: 'https://imgcs.artprintimages.com/img/print/print/pela-design-old-world-map_a-l-9730967-0.jpg?w=550&h=550',\r\n                title: 'World',\r\n                width: '50%',\r\n                func: this.onMapShow\r\n            },\r\n            {\r\n                url: 'https://cmkt-image-prd.global.ssl.fastly.net/0.1.0/ps/3531131/1360/906/m1/fpnw/wm1/wyxjobfaj3tqsfffecuvn3asvh9jutaao5tv8wmi2petimokkb1ksubbpbazinh2-.jpg?1509966990&s=5858246a1eae64c71c048b64d355653b',\r\n                title: 'Data',\r\n                width: '50%',\r\n                func: this.onDataShow\r\n            },\r\n        ];\r\n    };\r\n\r\n    getCountryYear = () => {\r\n        fetch(utilData.fetchUrl, {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }})\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                utilData.allData = data;\r\n                this.setState({data: data});\r\n            })\r\n            .catch(e => console.log(e));\r\n    };\r\n\r\n    onMapShow = ()=>{\r\n        this.state.history.push('/map');\r\n    };\r\n\r\n    onDataShow = ()=>{\r\n        this.state.history.push('/data');\r\n    };\r\n\r\n    renderMap = () => {\r\n        if (this.state.data != null){\r\n            return (<Map data={this.state.data}/>);\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base\">\r\n                <div id={\"toolbar\"}>\r\n                    <NavigationButton images={this.getNavigationBar()}/>\r\n                </div>\r\n                <div id={\"content\"}>\r\n                    <Route exact path=\"/\" component={Default} />\r\n                    <Route path=\"/map\" component={this.renderMap} />\r\n                    <Route path=\"/data\" component={Data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from \"./js/home/home\";\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <Home/>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}